{"config":{"lang":["nl"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Lock-Unlock Project","text":"<p>Het Lock\u2013Unlock project is uitgevoerd in opdracht van het Federatief Datastelsel, programmaonderdeel van Realisatie IBDS. Binnen het Federatief Datastelsel is het kunnen delen van data uiteraard de kern, maar dit moet ook op een verantwoorde manier gebeuren, waarbij bescherming van data en autorisatie belangrijk zijn.</p> <p>Lock-Unlock richt zich op Linked Data, voortbouwend op de Integrale Gebruiksoplossing (IGO) en de Kadaster Knowledge Graph (KKG) ontwikkelt door het Kadaster. Er zijn weinig gestandaardiseerde mogelijkheden voor autorisatie van data in het Linked Data domein. Dit project is uitgevoerd om de (on)mogelijkheden te onderzoeken en te testen.</p> <p>In onderstaande infographic zijn de verschillende onderdelen van het project terug te vinden. We starten met een testopstelling voor federatieve bevraging. Als dat aangetoond en mogelijk is, dan rijst de vraagt of data ook afgeschermd kan worden. Dat doen we in het hoofdstuk afscherming; hier zoeken we naar een 'lock'  op de data. In het derde deel komen we bij het doel van het onderzoek, namelijk of het mogelijk is om toegang te verlenen aan geautoriseerde vragers: autorisatie als Linked Data en daarmee de 'unlock'  van de data.</p> Infographic"},{"location":"#leeswijzer","title":"Leeswijzer","text":"<ul> <li>(Management) Samenvatting</li> <li>Volledig rapport met<ul> <li>Federatieve bevraging</li> <li>Afscherming</li> <li>Autorisatie als Linked Data</li> </ul> </li> <li>Conclusies en aanbeveligingen</li> <li>Opleveringen</li> <li>Achtergronden</li> </ul>"},{"location":"conclusies/","title":"Conclusies en aanbevelingen","text":"<p>Lock-Unlock richt zich op Linked Data, voortbouwend op de Integrale Gebruiksoplossing (IGO) en de Kadaster Knowledge Graph (KKG) ontwikkeld door het Kadaster. Er zijn weinig gestandaardiseerde mogelijkheden voor autorisatie van data in het Linked Data domein. Dit project is een verkenning om de (on)mogelijkheden te onderzoeken en te testen.</p>"},{"location":"conclusies/#conclusies","title":"Conclusies","text":"<p>Hoewel het doel van dit project vooral lag op autorisatie als Linked Data, is een deel van de aandacht ook gegaan naar federatieve bevraging. Dat schetst namelijk de context waarin afscherming zou moeten plaatsvinden. Uiteraard hebben we ook beproefd in hoeverre autorisatie als Linked Data mogelijk en haalbaar is. Hierover hebben we apart een evaluatie geschreven. De conclusies volgen hier:</p> <p> Zie ook disclaimer.</p>"},{"location":"conclusies/#federatieve-bevraging","title":"Federatieve bevraging","text":"<p>Linked Data maakt federatieve bevraging gemakkelijk</p> <p>Een federatieve bevraging is op meerdere manier mogelijk. Een omgeving met REST API's biedt ook wel de mogelijkheid voor federatieve bevragingen, maar dit legt een grote beheerlast bij de 'vrager'. Met GraphQL zijn daar stappen in gemaakt, maar daarin is nog steeds behoefte aan gateway oplossingen.</p> <p>Linked Data is ontworpen met federatie in de basis. Vanuit het ontwerp is federatieve bevraging daarom al beschikbaar. In de Linked Data Query Language, SPARQL, is dit gespecificeerd met de <code>service</code> clause.</p> <p>Performance van federatieve bevraging varieert</p> <p>Dat federatieve bevraging standaard in de Query Language zit en in de basis van Linked Data wil dat niet zeggen dat er geen 'problemen' zijn. In concept is het al ingewikkeld om een generieke werkwijze te bedenken die een query snel uitvoert. Daar is vrijwel altijd een analyse van de query voor benodigd om uit te werken wat de snelste manier is om de vraag (query) te beantwoorden. Deze analyse en uitwerking naar snelle uitvoering van federatieve vragen, is niet gestandaardiseerd in SPARQL of Linked Data. In de verschillende implementaties van triplestores zijn hier grote verschillen. In dit project is er gebruik gemaakt van een open-source triplestore waarbij query performance achterloopt t.o.v. de commerciele toppers.</p> <p>Er zijn wel ontwikkelingen rondom federatieve bevraging in het Linked Data domein. Zie ook aanbeveling Meer onderzoek naar performance federatieve bevragingen</p> <p>Duurzame koppeling van silo's vraagt om een expliciet ontwerp</p> <p>Om duurzaam over silo's van data heen goed te kunnen navigeren en federatieve bevragingen te kunnen doen, dienen de schema's \u00e9n de data goed gekoppeld te zijn. Ook voor Linked Data. Wel biedt Linked Data hier verschillende mogelijkheden voor. Zo is het mogelijk om een upper ontology voor de registers af te spreken. Door adoptie van de upper ontologie kunnen relaties tussen de informatie modellen maar ook relaties tussen de datasets toe gevoegd worden. </p> <p>Zie ook informatiekundige kern.</p>"},{"location":"conclusies/#autorisatie-als-linked-data","title":"Autorisatie als Linked Data","text":"<p>Afschermen van Linked Data is mogelijk</p> <p>Het is mogelijk om fijnmazig autorisatieregels declaratief te modelleren op basis van een autorisatie ontologie voor federatieve bevragingen op basis van Linked Data. We hebben dit aan kunnen tonen in onze demonstrators, waarin we een eerste toepassing van een door ons ontwikkelde autorisatie ontologie hebben uitgewerkt.</p> <p>Declaratieve autorisatieregels als Linked Data</p> <p>Met autorisatieregels doelen we op toegangsregels die gelden voor een specifieke situatie. Voor een bepaalde gebruikersgroep wordt toegang verleend voor een specifiek data-schema, een specifieke ontologie. De regels die gelden kunnen zeer fijnmazig zijn en de verschillende afschermingspatronen bevatten. We hebben in onze demonstrators aangetoond dat verticale en horizontale subsets mogelijk zijn. De richting is moeilijker en zijn we onvoldoende aan toegekomen om te kunnen zeggen dat dat echt werkt. Is het mogelijk? Wij denken van wel.</p> <p>De autorisatieregels zijn declaratief. Dat betekent dat de gewenste toegang of juist afscherming gespecificeerd kan worden. Onderliggende uitvoering en zelfs uitwerking wordt overgelaten een de 'engine' die zorgdraagt voor de afscherming.</p> <p>Dit houdt ook in dat autorisatieregels data is <code>#data-gedreven</code>. Dit betekent:</p> <ul> <li>dat de autorisatieregels kunnen worden bevraagd (wie heeft toegang tot wat en eventueel zelfs   waarom (niet)). Wellicht is het mogelijk om te verwijzen t/m de wettelijke grondslag?</li> <li>dat de autorisatieregels kunnen worden opgesteld en gedefinieerd onafhankelijk van de software   (engine) waarin de regels worden afgedwongen</li> <li>dat de autorisatieregels als knowledge graph toegankelijk zijn</li> </ul> <p>Autorisatie ontologie voor standaardisatie</p> <p>De autorisatieregels kunnen worden gestandaardiseerd in een autorisatie ontologie. Dat betekent dat een software implementatie van deze ontologie als engine gebruikt kan worden om de data van de autorisatieregels uit te voeren. Doordat een ontologie programeertaal onafhankelijk is, kunnen er meerdere implementaties gemaakt worden voor de autorisatie ontologie.</p> <p>Declaratieve autorisatieregels gekoppeld aan bestaande ontologie\u00ebn</p> <p>Het is mogelijk om in de declaratie van de autorisatieregels volgens de autorisatie ontologie, een relatie te maken naar al bestaande ontologie\u00ebn. Dat wil zeggen dat de toegang (of juist ontzegging daarvan) gedeclareerd kan worden volgens de autorisatie ontologie en daarbij kan gedeclareerd worden over welke andere ontologie die regels gelden. In ons voorbeeld zijn dat de registratie ontologie\u00ebn van de BRK, BRP en NHR. De autorisatieregels zijn daarmee direct gekoppeld aan de schema-elementen van deze register ontologie\u00ebn.</p> <p>Deze vorm biedt inzicht in wie waar toegang toe heeft of juist niet. Daarmee biedt het mogelijkheden tot verificatie van de autorisaties (eventueel aan andere partijen, zoals een toezichtshouder).</p>"},{"location":"conclusies/#conclusies-van-beproevingen","title":"Conclusies van beproevingen","text":"<ul> <li> <p>het is mogelijk om gebruik te maken van de data om autorisatieregels op te stellen. Zo kan er   bijvoorbeeld toegangsregels opgesteld worden voor een bepaalde gemeente. De daadwerkelijke   gemeente wordt uit de dataset opgehaald.</p> </li> <li> <p>De ge-identificeerde afschermings patronen zijn generiek en bieden veel mogelijkheden tot   afscherming via configuratie van deze patronen</p> </li> <li> <p>De PoC implementaties laten zien dat veel autorisatie patronen makkelijk implementeerbaar en   haalbaar zijn. Deze implementaties zijn niet bruikbaar voor productie en evt problemen mbt   veiligheid en schaalbaarheid zijn niet onderzocht. Zie ook disclaimer.</p> </li> <li> <p>Fictieve data van gekoppelde registers in Linked Data is makkelijk te realiseren. </p> </li> <li> <p>Rewritten queries uit de implementatie   rewrite zijn complexer dan de orginele   queries. Dat geeft extra belasting bij de uitvoering van de query. Daarom zijn optimale   queryplannen noodzakelijk zijn om prestatie (performance) redenenen. Alleen triplestore met goede   optimalisatie van queryplannen kunnen deze queries performant uitvoeren.</p> </li> <li> <p>Het afschermen van gegevens zo dicht mogelijk bij de triplestore biedt grotere zekerheid dan   afscherming van gegevens door applicaties</p> </li> <li> <p>Bewijs dat de queries 'waterdicht' zijn is niet aanwezig in dit project noch was dit de   doelstelling van de PoC implementaties. Zie ook aanbeveling Volledigheid en effectiviteit   meetbaar maken</p> </li> </ul>"},{"location":"conclusies/#aanbevelingen","title":"Aanbevelingen","text":"<p>Meer onderzoek naar performance federatieve bevragingen</p> <p>De performance van federatieve bevragingen is nog weinig onderzocht en er is waarschijnlijk veel ruimte om dit te verbeteren. De voornaamste aspecten hierin zijn de schaalbaarheid en de optimalisatie van de queries. Het gebruiken van HDT-bestanden, en specifiek de header-sectie, kan interessante mogelijkheden bieden hierin.</p> <p>Informatiekundige kern</p> <p>Relaties tussen registers en silo's zijn geen eenvoudig probleem. Daar zijn oplossingen voor nodig. Een oplossing die Linked Data kan bieden is een upper ontology. Daarmee zouden relaties gestandaardiseerd en geformaliseerd kunnen worden. Daarna zouden (gelijke) functionele zaken gestandardiseerd kunnen worden. Denk aan \"ID\"'s en versie beheer en meta-data van registers in Linked Data.</p> <p>Linked Data adoptie vergroten</p> <p>Linked Data biedt veel mogelijkheden voor federatieve bevragingen, expliciete verplichting voor semantiek, informatiemodellen en begrippen. En met de autorisatie ontologie komt ook afscherming in de mogelijkheden van Linked Data. Het succes en toepassen van deze technieken staat of valt echter met de adoptiegraad van Linked Data in het algemeen. Het vergroten van deze adoptie is daarom van belang. Hierbij Kun je vragen stellen zoals wat is het minimum noodzakelijke voor een registerhouder om data als Linked data te publiceren. Wat is de minimale infrastructuur hiervoor en hoe kan er snel en robuust Linked Data gecreeerd worden. </p> <p>Autorisatie ontologie verder uitwerken</p> <p>De Authorisation Ontology waar in dit project in eerste opzet van is gedaan, dient verder te worden uitgewerkt. Het mooiste zou zijn als deze tot een standaard wordt verheven natuurlijk. Dat betekent ook dat vendors van triple stores deze standaard kunnen implementeren zodat het \u00e9cht gaat werken. Federatief!</p> <p>Het is daarin van belang dat ook alternatieven goed geanalyseerd en overwogen worden. In dit onderzoek hebben we daar wel kennis van genomen, maar zijn we te weinig toegekomen aan een 'in depth' vergelijking.</p> <p>Voor de ontwikkeling zou een W3C Working Group uiteraard een mooi middel zijn!</p> <p>Beperking van richting uitwerken</p> <p>In dit project hebben we uitgewerkt en beproefd hoe verticale en horizontale subsets afgeschermd of juist onsloten kunnen worden. We hebben geen aandacht kunnen besteden aan het beperken van de richting. Hier dient extra (vervolg)onderzoek op gedaan te worden.</p> <p>Volledigheid en effectiviteit meetbaar maken</p> <p>In dit onderzoek is aangetoond dat het mogelijk is om mbv een autorisatie ontologie een 'secured SPARQL endpoint' te ontwikkelen (twee zelfs! ). We hebben echter niet aangetoond dat dit volledig waterdichte toegangscontrole biedt. Sterker nog, we zijn niet eens toegekomen aan de richting beperken.</p> <p>Om (later) aan te tonen dat de autorisatie ontologie volledig is en effectief wordt toegepast voor een 'secured SPARQL endpoint' is het noodzakelijk om een betrouwbare en herhaalbare meetmethode te hebben. Hierin zullen de verschillende afschermingspatronen opgenomen moeten zijn en allerlei variaties en combinaties hierin.</p> <p>Opvolging organiseren tbv volledigheid en effectiviteit</p> <p>Verdere R&amp;D bewijsvoering dat de implementatie waterdicht is. Eventueel in samenwerking met academici voor wetenschappelijk fundament.</p> <p>Meer onderzoek naar performance van de afscherming</p> <p>Naast de performance van Linked Data oplossing in het geheel, stelt de afscherming nieuwe en extra complexiteit verhogende eisen en karakteristieken. Het verdient meer onderzoek naar de performance van specifiek dit onderdeel.</p> <p>Implementatie doorontwikkelen</p> <p>Een eerste aanzet en prototyping rondom implementaties is gedaan, maar verdient meer opvolging. Hierbij kan gedacht worden aan vervolgonderzoeken in samenwerking met vendors van triplestores en/of academici.</p>"},{"location":"conclusies/#disclaimer","title":"Disclaimer","text":"<p>Dit project is een onderzoeksproject. De opleveringen die ontstaan zijn, zijn van het niveau Research &amp; Development. Goed ter inspiratie en vervolgonderzoek zeer geschikt. Voor productie ... ongeschikt! </p> <ul> <li> <p> Authenticatie is uitgesloten van dit project en   als gegeven beschouwd. Hier is echter ook nog veel in te kiezen en te onderzoeken!</p> </li> <li> <p> De autorisatie ontologie die opgeleverd is in   dit project, is slechts een eerste prototype en voorbeeld! Dit is uitsluitend voor Research &amp;   Development doeleinden. Zie ook aanbeveling autorisatie ontologie verder   uitwerken</p> </li> <li> <p> De implementaties zijn nog niet   bruikbaar voor productie en eventuele problemen mbt veiligheid en schaalbaarheid zijn niet   onderzocht</p> </li> </ul>"},{"location":"opleveringen/","title":"Opleveringen","text":"<p>In het Lock-Unlock project zijn de volgende zaken ontwikkeld en opgeleverd.</p>"},{"location":"opleveringen/#autorisatie-ontologie","title":"Autorisatie ontologie","text":"<p>Om het concept te kunnen beproeven hebben we in het Lock-Unlock project een initi\u00eble versie van een Autorisatie ontologie ontwikkeld. Deze is verre van definitief of geschikt voor een standaard ... en tegelijk w\u00e9l beproeft! Voor verder onderzoek kan deze als uitgangspunt dienen.</p> <p>De Authorisatie ontologie is te downloaden uit de GitHub repository: lock-unlock-docs/ontologies/Authorisation.ttl (<code>.ttl</code> formaat).</p>"},{"location":"opleveringen/#authenticatie-ontologie","title":"Authenticatie ontologie","text":"<p>Hoewel authenticatie is uitgesloten van de scope van het Lock-Unlock project, is het wel een randvoorwaarde voor de testopstelling. Daarom hebben we een (minimale) Authenticatie ontologie ontwikkeld.</p> <p>De Authenticatie ontologie is te downloaden uit de GitHub repository: lock-unlock-docs/ontologies/Authentication.ttl (<code>.ttl</code> formaat).</p>"},{"location":"opleveringen/#logging-ontologie","title":"Logging ontologie","text":"<p>Ten behoefte van de Query Auditing is er een eerste begin gemaakt aan het vastleggen van een (Query) Logging ontologie.</p> <p>De Logging ontologie is te downloaden uit de GitHub repository: lock-unlock-docs/ontologies/Logging.ttl (<code>.ttl</code> formaat).</p>"},{"location":"opleveringen/#secured-sparql-endpoints","title":"Secured SPARQL Endpoints","text":"<p>Er zijn twee verschillende implementaties gerealiseerd. Beide hebben een eigen karakteristieken en voor- en nadelen. Beide implementatie zijn gepubliceerd onder een open source licentie:</p> <ul> <li>Secured SPARQL Endpoint Sub   Graph (based on Apache Jena &amp;   SpringBoot)</li> <li>Secured SPARQL Endpoint Rewrite (SPARQL   Query) (based on Fuseki)</li> </ul>"},{"location":"opleveringen/#testdata","title":"Testdata","text":"<p>Voor de testopstelling is synthetische testdata gegenereerd. Deze is te vinden onder een open source licentie:</p> <ul> <li>Lock-Unlock Testdata</li> </ul>"},{"location":"opleveringen/#helm-charts","title":"Helm Charts","text":"<p>Tbv de deployement zijn er Helm Charts opgeleverd waarmee de implementaties gemakkelijk gedeployed (ge\u00efnstalleerd) kunnen worden. Ook deze zijn onder een open source licentie gepubliceerd:</p> <ul> <li>Lock-Unlock Helm Charts</li> </ul>"},{"location":"samenvatting/","title":"Management Samenvatting","text":"<p>Binnen dit project is onderzocht hoe data afgeschermd kan worden binnen een federatief datastelsel en dan specifiek in Linked Data. Er zijn weinig gestandaardiseerde mogelijkheden voor autorisatie van data in het Linked Data domein. Dit project is uitgevoerd om de (on)mogelijkheden te onderzoeken en te testen.</p>"},{"location":"samenvatting/#federatieve-bevraging","title":"Federatieve bevraging","text":"<p>Voordat we aan de autorisatie (on)mogelijkheden zijn begonnen, hebben we federatieve bevraging uitgewerkt en daar een testopstelling voor gemaakt. Hierbij hebben we verschillen tussen API's beschreven, onderdelen van een informatiekundige kern uitgewerkt en een informatiemodel en demonstator opgeleverd. Dit biedt de randvoorwaarden om te komen tot afscherming.</p>"},{"location":"samenvatting/#afscherming","title":"Afscherming","text":"<p>In een federatieve bevraging zijn diverse afschermingspatronen van belang. In een uitgebreid desk research hebben deze uitgewerkt, bestaande implementaties onderzocht en oplossingsrichtingen bedacht. Daaruit is ons onderzoeksvoorstel opgesteld: autorisatie als Linked Data.</p> <p>Autorisatie oplossingen zouden de volgende afschermingspatronen moeten ondersteunen:</p> <ul> <li> <p>verticale subsets: objecten en/of   kenmerken en/of relaties zijn afgeschermd, zoals bijv. koopsom of eigenaar.</p> </li> <li> <p>horizontale subsets: delen van de   data zijn afgeschermd, waar je wel toegang toe hebt is volledig en dus niet verticaal afgeschermd.   Een voorbeeld hiervan is dat je alleen toegang hebt tot de data van een specifieke regio.</p> </li> <li> <p>afscherming   relatie-richting:   het opvragen van informatie in een bepaalde richting is mogelijk, maar het opvragen van de   omgekeerde richting is niet mogelijk. Bijvoorbeeld: het zou mogelijk moeten zijn om te zoeken naar   de eigenaar van een specifiek perceel op basis van het perceelnummer maar niet alle perceelnummers   die iemand in eigendom heeft op basis van naam.</p> </li> <li> <p>aggregatie mogelijkheden: het kan zijn dat gebruikers geen toegang hebben tot de micro data maar   wel tot aggregaties (onder bepaalde voorwaarden) Denk bijvoorbeeld aan de gemiddelde   transactieprijzen van woningen in een bepaald gebied.</p> </li> <li> <p>vrije query mogelijkheiden ondersteunen: de kracht van Linked Data is dat je zonder een vooraf   gedefinieerd schema het endpoint kunt bevragen. Die optie wil je blijven behouden.</p> </li> </ul> Infographic"},{"location":"samenvatting/#autorisatie-ontologie","title":"Autorisatie ontologie","text":"<p>Deze patronen zijn gemodelleerd in een autorisatie ontologie. Mbv deze autorisatie ontologie kunnen deze concepten specifiek gemaakt worden voor elk register waardoor er een declaratief model ontstaat met daarin de beschreven rechten voor een specifieke rol of gebruiker. Dit model is direct gerelateerd aan het schema van de registers om zo autorisatieregels toe te wijzen aan (delen van) het schema of delen van de daadwerkelijke data. Zo kunnen er bijvoorbeeld kenmerken afgeschermd worden voor bepaalde gebruikers. Oftewel deze gebruikers hebben geen toegang tot deze kenmerken. Ook kunnen er extra restricties gemodelleerd worden om bijvoorbeeld horizontale subsets te defini\u00ebren. Bijvoorbeeld een gebruiker heeft alleen toegang tot percelen en gerelateerde informatie uit gemeente X. </p> <p>Theoretisch zijn hier al de volgende conclusies te trekken:</p> <ul> <li> <p>het is mogelijk om (geavanceerde) autorisatieregels vast te leggen in Linked Data op basis van   een autorisatie ontologie.</p> </li> <li> <p>het is mogelijk om gebruik te maken van een Linked Data schema van de dataset. Authorisatie regels   zijn daarmee direct gekoppeld aan schema-elementen. Hiermee kan o.a. inzicht geboden worden wie   waar toegang toe heeft en evt waar niet. Ook geeft deze aanpak mogelijkheden tot verificatie van   de autorisaties.                      </p> </li> <li> <p>het is mogelijk om gebruik te maken van de data om autorisatieregels op te stellen. Zo kan er   bijvoorbeeld toegangsregels opgesteld worden voor een bepaalde gemeente. De daadwerkelijke   gemeente wordt uit de dataset opgehaald.</p> </li> </ul>"},{"location":"samenvatting/#proof-of-concept","title":"Proof of Concept","text":"<p>Een Proof of Concept is gemaakt op basis van Linked Data en SPARQL Endpoints. Het idee is om de architectuur mbt Linked Data te behouden en binnen deze context data te beveiligen. Oftewel het concept is om SPARQL endpoints (elke) query te laten verwerken maar alleen resultaten, waartoe de gebruiker toegang heeft, terug te geven. </p> <p>Hiervoor is een testomgeving opgezet met de volgende eigenschappen:</p> <ul> <li> <p>Elke dataset heeft een eigen SPARQL endpoint. Hier is fictieve data te vinden inclusief een schema   van die dataset. Echte perceel data is gebruikt op basis van het IMX-Geo schema.</p> </li> <li> <p>Links zijn aanwezig tussen de registers op basis van Linked Data. Een informatiekundige   kern zou deze links op schemaniveau kunnen   beschrijven en controleren.</p> </li> <li> <p>Federatieve bevraging kan 'standaard' op basis van de federatieve eigenschappen van Linked Data en   SPARQL. Concreet wordt er in de PoC gebruik gemaakt van de \"service\" mogelijkheden binnen SPARQL.   Elk SPARQL endpoint kan via deze service aangeroepen worden.</p> </li> <li> <p>Gebruikers en de rechten die deze gebruikers hebben op de data zijn gemodelleerd in Linked Data op   basis van een autorisatie ontologie. Elk SPARQL endpoint heeft een eigen autorisatie model.</p> </li> <li> <p>SPARQL endpoints kunnen beveiligd worden op basis van meerdere implementatie   strategie\u00ebn. In dit project zijn 2   strategie\u00ebn verder uitgewerkt en geimplementeerd. Beide implementaties gebruiken de autorisatie   ontologie om inkomende SPARQL queries te verwerken en alleen niet-afgeschermde informatie terug te   geven</p> </li> <li> <p>Beide implementaties loggen elke query om bijvoorbeeld   audits achteraf mogelijk te maken.</p> </li> </ul>"},{"location":"achtergrond/","title":"Achtergronden","text":"<p>Voor dit onderzoek is gebruik gemaakt van vele bronnen, resources en begrippen. Om de documentatie niet te omvangrijk te maken en (enigszins) overzichtelijk, hebben we extra gebruikt materiaal in dit achtergrond hoofdstuk gestopt. Ook hebben we daar een glossary opgenomen met veel gebruikte of mogelijk onbekende termen.</p> <ul> <li>Glossary</li> <li>Autorisatie ontologie alternatieven</li> <li>Verwerkingenlogging</li> </ul>"},{"location":"achtergrond/auth-alternatieven/","title":"Autorisatie ontologie alternatieven","text":"<p>Er zijn andere initiatieven die een alternatief voor een nieuwe Autorisatie Ontologie zijn.</p>"},{"location":"achtergrond/auth-alternatieven/#authorisation-ontology","title":"Authorisation Ontology","text":"<p>link: oplevering#autorisatie-ontologie</p> <p>status: inception</p> <p>Dit is een nieuwe ontology die in dit Lock-Unlock project tot stand is gekomen in eerste vorm. Deze is gebaseerd op de terminologie van XACML. Dit is een vrij oude en nog steeds actuele standaard voor toegang. Het doel is om policies ook als data te beschouwen, te kunnen gebruiken, bevragen en m\u00e9t de data te publiceren. Data en hun policies zijn daarmee geen losstaande zaken meer, maar twee bij elkaar horende onderdelen.</p> <p>Zoals in de conclusies en aanbevelingen al is aangegeven, zou het mooiste resultaat een heuse wereld standaard ontologie zijn ... maar zijn nog wel 'een paar' stappen voor nodig.</p>"},{"location":"achtergrond/auth-alternatieven/#odrl","title":"ODRL","text":"<p>link: ODRL Information Model 2.2 | ODRL Vocabulary &amp; Expression 2.2</p> <p>status: Recommendation v2.2 (15 February 2018)</p> <p>ODRL staat voor de Open Digital Rights Language en zou wellicht ook gebruikt kunnen worden als Authorisation Ontology. Het is echter veel breder ingestoken om digitale rechten te declareren. Toegang ... is daar onderdeel van of een afgeleiden van? Dit is niet zo eenvoudig te vergelijken.</p> <p>The Open Digital Rights Language (ODRL) is a policy expression language that provides a flexible and interoperable information model, vocabulary, and encoding mechanisms for representing statements about the usage of content and services. The ODRL Vocabulary and Expression describes the terms used in ODRL policies and how to encode them.</p> <p>Het lijkt erop dat hier actief aan gewerkt is en dat er behoorlijke evolutie is geweest (zie history), gezien het versienummer <code>2.2</code>. Tegelijk is de W3C Permissions and Obligations Expression Working Group <code>closed</code>. Het is moeilijk te vinden waar deze standaard precies wordt toegepast en welke vendors deze ondersteunen.</p>"},{"location":"achtergrond/auth-alternatieven/#open-policy-agent","title":"Open Policy Agent","text":"<p>link: www.openpolicyagent.org</p> <p>status: v0.62.1 with multiple implementations</p> <p>De Open Policy Agent is een standaardisatie voor policies welke gericht is op REST API's. Het is niet duidelijk terug te vinden, maar het lijkt erop dat ook deze standaard gebruik heeft gemaakt van terminologie van XACML. Daarnaast is er ook inspiratie opgedaan vanuit Role Based Access Control (RBAC) en andere toegangsmechanismen.</p> <p>De filosofie is dat policies ontkoppeld worden van de software (engines) die deze policies afdwingen / toepassen. Deze policies dienen ook door mensen gelezen, geschreven en geananlyseerd te kunnen worden. De policies worden naast de (API) service beheerd en dus ook los van de data.</p>"},{"location":"achtergrond/auth-alternatieven/#xacml","title":"XACML","text":"<p>OASIS Committee XACML, the eXtensible Access Control Markup Language; een taal voor het uitdrukken van regels voor toegangsverlening. Deze regels zijn technologie onafhankelijk en gescheiden van de gegevens waarop ze betrekking hebben. De taal ondersteunt Attribute Based Access Control (ABAC).</p> <p></p> <p>Zie ook Artikel Java Magazine mei 2011</p>"},{"location":"achtergrond/auth-alternatieven/#vergelijking","title":"Vergelijking","text":"<p>ODRL is een vergelijkbare oplossingsrichting als de Authorisation Ontology van het Lock-Unlock project. Het is echter veel breder ingestoken dan alleen toegang. Het is zelfs de vraag of toegang wel voldoende uit te drukken is in ODRL. Daarnaast lijkt de ontwikkeling en toepassing van deze standaard stil te liggen.</p> <p>De Open Policy Agent steekt in op de huidige standaard API's: REST API's. De strekking is juist om naast de beveiligde data policies te kunnen beschrijven en beheren. Dat is een tegengestelde oplossing dan Lock-Unlock tracht te bereiken met de Authorisation Ontology.</p>"},{"location":"achtergrond/glossary/","title":"Glossary","text":""},{"location":"achtergrond/glossary/#authenticatie","title":"Authenticatie","text":"<p>Om de gebruiker te herkennen is een authenticatie proces nodig. In dit project is de gehele authenticatie overgeslagen en dus buiten scope. </p>"},{"location":"achtergrond/glossary/#autorisatie","title":"Autorisatie","text":"<p>Autorisatie is het proces waarbij een gebruiker rechten (of privileges) verkrijgt. In dit project is er afgeschermde data. Per gebruiker of rol kan de afscherming verschillen. Oftewel per rol of gebruiker zijn de privileges tot data verschillend.</p>"},{"location":"achtergrond/glossary/#dataset","title":"Dataset","text":"<p>Een collectie van bij elkaar horende gegevens. Dat kan bestaan uit een enkele tabel, maar ook uit een verzameling tabellen uit een database.</p> <p>Als een deel van een dataset geduid wordt, dan wordt vaak gesproken over een subset.</p> <p>Dit is vooral jargon wanneer over databases gesproken wordt. In geval van Linked Data wordt er meer gesproken over een graph of subgraph.</p>"},{"location":"achtergrond/glossary/#graph","title":"Graph","text":"<p>In geval van Linked Data wordt data gezien als nodes met relaties. Het totaal aan nodes en relaties vormen samen een graaf of graph (Engels). In de techniek wordt vooral de Engels notatie gebruikt.</p> <p>Je zou kunnen stellen dat een collectie van data voor een bepaalde context bij elkaar horend \u00e9\u00e9n graph vormen. Dit lijkt op zoals er over datasets gesproken wordt. En vergelijkbaar met een deel van een dataset, kan ook een deel van een graph aangeduid worden met subgraph.</p> <p>Dit is vooral jargon wanneer de data Linked Data betreft. In geval van meer traditionele vormen als REST API's en databases wordt over datasets gesproken.</p>"},{"location":"achtergrond/glossary/#linked-data","title":"Linked Data","text":"<p>Linked data is manier om data te structureren en te verbinden over het web en maakt gebruik van stanfaarden zoals URI's, RDF en ontologieen gedefinieerd in RDF zoals RDFS, OWL en SHACL. </p>"},{"location":"achtergrond/glossary/#open-policy-agent","title":"Open Policy Agent","text":"<p>Open Policy Agent (OPA) is een open-source beleidsmotor voor toegangscontrole en beleidsautomatisering in softwaretoepassingen. Het maakt gebruik van de beleidstaal genaamd Rego om beleidsregels te defini\u00ebren en uit te voeren. Rego is ontworpen om leesbare en krachtige beleidsregels te maken. OPA integreert met verschillende services en applicaties en kan complexe beveiligings- en autorisatievereisten implementeren door Rego-beleidsregels te evalueren op basis van inputgegevens, waardoor wordt beslist of een actie al dan niet wordt toegestaan. Dit wordt vaak gebruikt in moderne IT-omgevingen voor flexibele en geautomatiseerde beleidsafdwinging.</p> <ul> <li>Documentatie</li> <li>Policies in Rego lang</li> </ul>"},{"location":"achtergrond/glossary/#owl","title":"OWL","text":"<p>OWL staat voor de Web Ontology Language en is een gestandardiseerde taal voor formaliseren van ontologieen op basis van Linked Data.</p>"},{"location":"achtergrond/glossary/#privacy-enhancing-technologies-pets","title":"Privacy Enhancing Technologies (PETs)","text":"<p>PET is een verzamelnaam voor verschillende technieken die de afscherming van (persoons-)gegevens ondersteunen PETs faciliteren dat analyses kunnen worden uitgevoerd zonder de onderliggende data in te zien, zo worden toepassingen mogelijk die anders onmogelijk zouden zijn. PETs zien wij dan ook niet als technieken die autorisaties inregelen voor het bevragen van specifieke data maar faciliteren voornamelijk analyses waarbij toegang tot de onderliggende data niet toegestaan/gewenst is.</p> Voorbeelden: <ul><li>Zero knowledge proofs</li><li>Bloom filters</li><li>Differential Privacy</li><li>Synthetische data</li></ul> <ul><li>Federated Learning</li><li>Multi Party Computation</li><li>Homomorphic Encryption</li></ul> <p>Zie ook:</p> <ul> <li>Wegzwijzer PETs van IBDS</li> <li>PETs in de praktijk - VKA</li> <li>TNO over PETs </li> </ul>"},{"location":"achtergrond/glossary/#rdf","title":"RDF","text":"<p>RDF staat voor Resource Description Framework. Het is een gestandardiseerd model voor het opslaan van verwerkbare gegevens en biedt een zeer veel flexibiliteit mbt het structureren en beschrijven van gegevens.</p>"},{"location":"achtergrond/glossary/#shacl","title":"SHACL","text":"<p>SHACL staat voor Shapes Constraint Language. Het is een W3C stdnaard voor het valideren van RDF data volgens een Shacl model. Via Shacl kun je zogenaamde Shapes definieren die structuren beschrijven van RDF data. Vervolgens kan RDF data getest worden of ze voldoen aan deze shapes. </p>"},{"location":"achtergrond/glossary/#sparql","title":"SPARQL","text":"<p>Sparql is een querytaal voor het bevragen en manipuleren van Linked Data op basis van de RDF standaard. Sparql biedt o.a. de mogelijkheid om complexe vragen te stellen aan Linked Data waarbij er op zoek gegaan wordt naar 'oplossingen' die voldoen aan de vraag.</p>"},{"location":"achtergrond/glossary/#sparql-endpoint","title":"SPARQL Endpoint","text":"<p>Een SPARQL endpoint is een REST API die SPARQL queries kan uitvoeren. Het betreft hier een W3C standaard. </p>"},{"location":"achtergrond/glossary/#triplestore","title":"Triplestore","text":"<p>Een triplestore is een database voor het opslaan en bevragen van Linked Data op basis van de RDF standaard. Vaak biedt een triplestore een SPARQL endpoint aan.</p>"},{"location":"achtergrond/glossary/#uniform-resource-identifier","title":"Uniform Resource Identifier","text":"<p>Een reeks tekens die wordt gebruikt om een bron op een computernetwerk te identificeren, waarvan het bekendste type het webadres of een URL is.</p>"},{"location":"achtergrond/verwerkingenlogging/","title":"Verwerkingenlogging","text":"<p>// TODO uitwerken</p> <p>// TODO onderstaande is uit andere docs hierheen verplaatst</p>"},{"location":"achtergrond/verwerkingenlogging/#loggen-van-queries","title":"Loggen van queries","text":"<ul> <li>Om te kunnen verantwoorden dat (met name persoons)gegevens op een juiste manier verwerkt worden, is het nodig om de verwerking te bewaren. Dat gebeurt door de queries te loggen.</li> <li>Het loggen van queries en context biedt altijd de mogelijkheid om later onregelmatigheden op te sporen.</li> </ul> <p>Randvoorwaardelijk voor het achteraf kunnen controleren van queries: query auditing.</p> <p>Query auditing: dit is geen oplossing voor autorisatie. Bij alleen query auditing kan de gebruiker namelijk alle data bevragen en worden slechts de queries met bijbehorende context (denk bijv. aan de gebruiker en meegegeven referentie naar doelbinding) opgeslagen. Vervolgens kan er achteraf handmatig of wellicht automatisch bepaald worden of er onrechtmatige vragen/queries zijn gesteld en of dat er onterecht toegang is verkregen tot gesloten gegevens.</p>"},{"location":"achtergrond/verwerkingenlogging/#relatie-met-verwerkingenlogging-standaard","title":"Relatie met Verwerkingenlogging standaard","text":"<p>De Verwerkinggenlogging is een API-standaard die is ontwikkeld door VNG Realisatie en deze standaard is opgenomen in de GEMMA referentiearchitectuur. Deze API-standaard biedt leveranciers van informatiesystemen gestandaardiseerde API-specificaties voor het vastleggen en ontsluiten van metagegevens behorend bij vastgelegde (logging) verwerkingen.</p> <p>De API standaard is ontwikkeld voor gemeenten en gemeentelijke samenwerkingsverbanden. Er zitten echter geen gemeente-specifieke zaken in de standaard dus andere organisaties kunnen de standaard ook toepassen. Door ontwikkeling vindt dan ook op dit moment (\u201923/\u201924) plaats door MinBZK.</p> <p>Zie ook link </p> <p>TO DO: - Tekst verder aanvullen - Verwijzen naar onze logging ontologie? En relatie leggen met Verwerkingenloggingstandaard?</p>"},{"location":"afscherming/","title":"Afscherming ('Lock')","text":"<p>In het voorgaande hoofdstuk is ingegaan op het federatief kunnen bevragen van verschillende registers en de kracht daarvan. Wanneer je verschillende datasets integraal kunt bevragen ontstaat natuurlijk ook de vraag of dit altijd wenselijk is? Wie heeft toegang tot welke data? </p> <p>In dit hoofdstuk is dat het onderwerp: Hoe schermen we informatie (data) af? De 'Lock' van Lock-Unlock.</p>"},{"location":"afscherming/#leeswijzer","title":"Leeswijzer","text":"<p>We hebben hiervoor een desk research gedaan waarin we hebben uitgewerkt wat authenticatie en autorisatie eigenlijk is, waarom we zouden willen loggen wat er gebeurt, welke afschermingspatronen mogelijk en/of nodig zijn en wat mogelijke oplossingrichtingen zijn. Daaruit volgt het voorstel van wat we verder hebben onderzocht, ons onderzoeksvoorstel. </p> <p>Van het desk research is in deze documentatie site een kopie te vinden om zowel de bevindingen van dit desk research vast te leggen als onderdeel van de volledige documentatie van dit project, maar ook om verwijzingen naar dit desk research op te nemen in de bevindingen van het project dat volgde op dit desk research.</p> <ul> <li>Inleiding Autorisatie</li> <li>Afschermingspatronen </li> <li>Bestaande Implementaties</li> <li>Oplossingsrichtingen</li> <li>Onderzoeksvoorstel</li> </ul>"},{"location":"afscherming/#achtergronden","title":"Achtergronden","text":"<ul> <li>REST vs. GraphQL vs. SPARQL</li> <li>Linked Data</li> <li>Verwerkingenlogging</li> <li>XACML</li> <li>ODRL vs XACML vs Open Policy Agent</li> </ul>"},{"location":"afscherming/afschermingspatronen/","title":"Afschermingspatronen","text":"<p>Zoals in het vorige hoofdstuk als is gesteld, willen we graag een federatieve bevraging doen. Dat betekent een query over meerdere silo's en dus meerdere endpoints. Zie ook informatiekundige kern, testopstelling#silos en informatiemodel. </p> <p>Omdat deze databronnen gevoelige informatie bevatten, moet autorisatie op deze gegevenssets worden toegepast. Wie toegang heeft tot informatie (en tot hoeveel informatie) hangt af van de context. Gegevens kunnen bijvoorbeeld niet openbaar beschikbaar zijn op basis van beleid en wetten die verband houden met de bescherming van persoonsgegevens of om commerci\u00eble redenen, zoals gevoelige informatie die verband houdt met bedrijfsprocessen. Zelfs binnen deze contexten kunnen bepaalde rollen meer toegang krijgen tot informatie dan andere rollen en alleen voor bepaalde doeleinden.</p> <p>Als we informatie (data, gegevens) willen afschermen en daar onder voorwaarden toegang toe willen verlenen (autorisatie) kunnen we een aantal afschermingspatronen onderkennen. Patronen van hoe informatie georganiseerd is of we daarin afscherming zouden willen afdwingen.</p> <p>Voor de flexibiliteit van het gebruik en hergebruik van data is per gebruik vrij kunnen bevragen (query\u2019n) of navigeren door het datastelsel zeer gewenst / noodzakelijk. Het doel is om vrije bevraging (query) te ondersteunen onder de voorwaarden die dmv autorisatie is toegestaan.</p> <p>Welke beperkingen zijn daarin vanuit die voorwaarden en autorisatie dan gewenst? Dit zijn requirements die gesteld worden aan de autorisatie oplossing.</p>"},{"location":"afscherming/afschermingspatronen/#toegang-tot-een-subset","title":"Toegang tot een Subset","text":"<p>'Data partioning' is een concept dat bij databasebeheer wordt gebruikt om grote datasets in kleinere, beter beheersbare partities of subsets te verdelen. Dit kan zowel verticaal als horizontaal gedaan worden. Op deze kleinere subsets kunnen toegangscontrole mechanismen toegepast worden.</p> Subset Requirement <p>In Linked Data kan een subset ook subgraph genoemd worden (zie glossary). Bovenstaande concept is dan ook voor Linked Data van toepassing. Het is mogelijk om horizontale of verticale sub-graphs te maken. Een horizontale sub-graph bevat dan niet alle triples maar een selectie van bijvoorbeeld een specifieke regio. Een verticale sub-graph bevat alleen de triples die een specifiek attribuut betreffen van een subject en niet alle triples van dat subject.</p> Subgraph Requirement"},{"location":"afscherming/afschermingspatronen/#toegang-tot-data-in-een-bepaalde-richting","title":"Toegang tot Data in een Bepaalde Richting","text":"<p>Een van de intrinsieke kwaliteiten van graphs is om op verkennende wijze door de graph te navigeren. Binnen de context van een federatief datastelsel bestaan er echter een aantal gebruiksscenario's waarin deze vrije navigatie niet gewenst is en (dus) beperkt moet worden.</p> <p>Een van de noodzakelijke beperkingen in deze context is de mogelijkheid om inverse queries uit te voeren. Met andere woorden, het is noodzakelijk om toegangscontroles op gegevens te implementeren waarbij het opvragen van informatie in een bepaalde richting van de graph mogelijk is, maar het opvragen van de omgekeerde richting niet mogelijk is.</p> <p>Bijvoorbeeld: het zou mogelijk moeten zijn om te zoeken naar de eigenaar van een specifiek perceel op basis van het perceelnummer maar niet alle perceelnummers die iemand in eigendom heeft op basis van naam/BSN. </p> Query Direction"},{"location":"afscherming/autorisatie/","title":"Inleiding Autorisatie","text":"<p>In beginsel is autorisatie eenvoudig: iemand wil bij iets en de vraag is of dat mag.</p> Authorisatie op zijn basis <p>Was het maar zo gemakkelijk.</p> <ul> <li>\u2018iemand\u2019 betekent dat bekend moet zijn wie diegene is. Dit vraagt om identificatie,   identificerende gegevens, identiteiten. Het proces om dit te verifi\u00ebren heet authenticatie en dat   is een onderwerp op zich. </li> <li>Het \u2018iets\u2019 betekent \u2018een resource\u2019. Dat kan een hele dataset zijn, bijv. een basisregistratie   als BAG, BGT of BRK. Het kan ook een specifieke selectie zijn uit een dataset of een selectie uit   de combinatie van meerdere datasets. Dat \u2018iets\u2019 is al snel complex.</li> </ul> <p>Veel gehanteerde termen zijn \u2018subject\u2019 voor \u2018de iemand die de vraag stelt'. \u2018Resource\u2019 wordt gebruikt voor het \u2018iets dat opgevraagd wordt\u2019. De autorisatie wordt bepaald door \u2018policies\u2019, de voorwaarden, waaronder het subject toegang krijgt of niet. Deze gaan uit van een \u2018context\u2019 waarin de \u2018rollen\u2019 van het \u2018subject\u2019 en extra informatie op basis van het \u2018request\u2019, de vraag, kunnen worden meegenomen in de afweging. Deze terminologie is formeel vastgelegd in XACML. </p>"},{"location":"afscherming/autorisatie/#subject","title":"Subject","text":"<p>Een subject kan een gebruiker zijn en ook een machine (computer). Afhankelijk van het type bestaan er verschillende soorten van identiteiten.</p> Subject <p>Gebruikers worden meestal beheerd in een \u2018User Management System\u2019, welke weer gevoed kan worden door een HR systeem. Daarin worden meestal ook functies en rollen bijgehouden en uitgegeven door de beheerorganisatie over wat \u2018iemand mag\u2019. Een gebruiker heeft dan een \u2018username\u2019 (en wachtwoord) en een set aan rollen. Een geautoriseerd persoon geeft toestemming en legt verantwoording af over de rechten (rollen) van een gebruiker.</p> <p>Machines worden vaak dmv certificaten of (API) \u2018keys\u2019 (sleutels) ge\u00efdentificeerd. Deze zijn uitgegeven door een autoriteit en zijn geautomatiseerd te controleren.</p> <p>Zowel gebruikersaccounts als sleutelbeheer zijn complexe beheersprocessen waarin vele lagen van (verborgen) complexiteit zitten, zoals het kunnen intrekken, delegeren, verschillende niveaus van vertrouwen passend bij de verschillende niveaus van betrouwbaarheid die nodig is, etc, etc.</p> Out of scope Voor het Lock-Unlock project hebben we het onderdeel 'Subject' en ook het proces van authenticatie aangenomen als beschikbaar. Dat is er. Dat bestaat gewoon. Dit is absoluut niet het geval en er valt juist heel veel over te zeggen. Maar voor de scope van dit project is dat niet relevant. Op enig manier wordt een user of machine ge\u00efndentificeerd en dat vindt plaats v\u00f3\u00f3rdat het onderdeel autorisatie komt. Dit laatste is juist het onderwerp van onderzoek voor Lock-Unlock."},{"location":"afscherming/autorisatie/#authorisatie","title":"Authorisatie","text":"<p>Autorisatie is de controle en het proces van toegang geven tot een Resource. Een subject krijgt vaak niet zomaar toegang tot een resource. Het doel van autorisatie is dat alleen vastgestelde toegang verleend wordt aan Subjecten. Dat is een proces van afscherming v\u00f3\u00f3raf. Dit is het onderwerp van onderzoek voor het Lock-Unlock project en komt nog uitgebreid aan bod.</p> <p>Het doel van autorisatie, zeker in de context van de overheid, is te garanderen dat deze toegang rechtmatig is. Dat wil zeggen dat er een juridische grondslag is voor de toegang en/of verwerking. Het blijkt echter onmogelijk om volledig van tevoren te kunnen bepalen of de grondslag voldoende is om toegang te kunnen verlenen. Dat heeft met name te maken met de gedeelde verantwoordelijkheid van die toegang als dat een koppeling tussen twee organisaties betreft. De enige mogelijkheid om de grondslag juist te kunnen controleren, is achteraf. In dat geval is auditing nodig op de toegang die gegeven is. Voorkomen is dan helaas niet meer mogelijk, maar wel bijsturing en eventueel opvolging.</p> <p>Bij het uitdelen van autorisaties wordt o.a. gekeken naar interne en externe beleidstukken en wet- en regelgeving. Een belangrijk aspect hierbij is de doelbinding, zeker als het om persoonsgegevens gaat: gegevens mogen alleen worden verwerkt en verzameld voor een specifiek en gerechtvaardigd doel.</p> Doelbinding <p>Dit is niet gemakkelijk te controleren. Het punt is namelijk dat die doelbinding per casus gebonden zou moeten worden, maar informatie vaak over organisatiegrenzen heen gedeeld en gebruikt wordt. Het is voor de ene organisatie niet mogelijk om te beoordelen of de specifieke casus waar de betreffende gebruiker van de andere organisatie mee bezig is, passend is voor het doel dat beoogd is. Vooraf specifieke doelbinding controleren is daarom niet (volledig) mogelijk. Daar komt bij dat doelbinding op dit moment niet \u201cmachine readable\u201d is en de relatie met het datamodel is niet formeel is vastgelegd. Hierdoor is het (ook) niet mogelijk om een koppeling te leggen tussen de doelbinding en de bijbehorende attributen en queries.</p> <p>In geval van toegang verlenen, oftewel autorisatie, wordt wel vaak een afgeleide gemaakt van de doelbinding op een hoger niveau dan specifieke casussen. Een hele organisatie heeft toegang tot de gehele dataset van een andere organisatie. Door gestandaardiseerd te loggen wat precies wordt opgevraagd door wie, is wel specifieke controle achteraf mogelijk. De GEMMA Verwerkingenlogging is hier de standaard (in ontwikkeling) voor.</p>"},{"location":"afscherming/autorisatie/#auditing","title":"Auditing","text":"<p>Zoals hierboven al gesteld, is het onmogelijk om van tevoren of bij de evaluatie om toegang te gaan verlenen te bepalen of dat rechtmatig is. Dat is vooral in het geval als het een koppeling tussen twee (of meer) organisaties betreft. De medewerker van de bevragende organisatie zal een juridische grondslag moeten hebben om de bevraging te kunnen doen. Het is echter niet mogelijk voor de leverende organisatie om te bepalen of die grondslag juist is en passend voor de situatie. Sterker nog, het is onrechtmatig als de leverende organisatie precies weet voor welke casus de bevraging wordt gedaan. Dat betekent dat er van tevoren afspraken gemaakt kunnen worden of de mogelijkheid dat (medewerkers van) een organisatie de API van een andere organisatie gaan aanroepen en d\u00e1t kan gecontroleerd worden ten tijde van de bevraging. Dit is wat we autorisatie noemen. Voor de controle op juiste grondslag per bevraging zijn we aangewezen op auditing.</p> <p>Voor de auditing zijn beide partijen nodig en verantwoordelijk. De partij / organisatie van waaruit de bevraging wordt gedaan, is verantwoordelijk voor het vastleggen van de relatie naar de specifieke grondslag en specifieke casus waarvoor die grondslag zou moeten gelden en de medewerker die vanuit die organisatie daarbij betrokken is. De partij / organisatie die bevraagd wordt, de leverende partij, dient vast te leggen dat zij bevraagd zijn door de vragende partij en voor welke resource dat precies was. Om dmv een audit de relatie tussen beide verslaglegging te kunnen doen, wordt er vanuit de bevragende partij een <code>transaction referentie</code> (of <code>id</code>) meegegeven die in beide verslagleggingen dient te worden bewaard. Deze verslaglegging wordt ook wel 'logging' genoemd.</p> <p>Er bestaat een standaard in wording voor dit patroon en toepassing: Verwerkingenlogging</p>"},{"location":"afscherming/autorisatie/#resource","title":"Resource","text":"<p>Bij een \u2018resource\u2019 denken we in eerst instantie al snel aan een \u2018tabel\u2019. Een set aan gegevens van rijen en kolommen. </p> Resource <p>Was het maar zo eenvoudig... Meestal is een 'set of data\u2019, een verzameling tabellen. In veel gevallen is er een volledige informatiemodel (IM) of datamodel ontworpen om alle relaties tussen deze tabellen nauwkeurig en volledig weer te geven. De verschillende objecten in het model hebben elk hun eigen tabel en worden in de tabel impliciet gedefinieerd door sleutelkolommen. Zo'n hele verzameling gerelateerde objecten en een set gegevens wordt een dataset genoemd.  Voorbeelden: de basisregistraties zoals BRK, BAG, BGT.</p> <p>In deze context is een resource een database die een of meer tabellen bevat.</p>"},{"location":"afscherming/autorisatie/#resource-tabel-dataset-database","title":"Resource: Tabel, Dataset, Database","text":"<p>Een tabel of een dataset zit meestal in een database. </p> Resource - Database <p>Goed gebruik is om deze niet direct toegankelijk te maken voor gebruikers, maar te voorzien van een Application Programming Interface (API). Een API is een technisch koppelvlak die mogelijkheden biedt voor het opvragen (en muteren) van data en daar ook controles en beperkingen aan kan stellen. Hoewel API een generiek concept is, wordt in de huidige staat van de technologie meestal een \u2018REST API\u2019 bedoeld.</p> <p>Een API kan bijvoorbeeld een beperkt deel van de data(base) beschikbaar maken. Hierin is een verschil tussen horizontale en verticale scheiding (segmentatie). Horizontale scheiding betekent dat niet alle rijen op te vragen zijn. In het kader van autorisatie zou dat bijvoorbeeld beperkt kunnen zijn tot een bepaalde regio, bijvoorbeeld gemeentelijke grenzen.  Een verticale scheiding betekent dat niet alle kolommen op te vragen zijn. Een voorbeeld hiervan is dat perceelinformatie als open data beschikbaar is, maar de persoonsgegevens (uiteraard) niet. Deze zijn alleen op te vragen met de juiste rechten, of eigenlijk: de juiste grondslag. In deze context is de resource de combinatie van database en (REST) API. </p>"},{"location":"afscherming/autorisatie/#resource-triples","title":"Resource: Triples","text":"<p>Een resource kan een ingewikkeld informatiemodel hebben en het wordt nog ingewikkelder als meerdere datasets gecombineerd moeten worden. Dat betekent dat er relaties tussen meerdere informatiemodellen moeten worden gelegd. </p> Database to triples <p>Linked Data is een concept en technologie die hier veel flexibiliteit en expliciete ondersteuning voor biedt. In plaats van tabellen wordt hierin de data \u2018uit elkaar gehaald\u2019 tot zogenaamde \u2018triples\u2019. Elke data instantie is een \u2018subject\u2019 dat een relatie heeft (\u2018predicate\u2019) tot een \u2018object\u2019. En dit kan oneindig! Zo kunnen relaties leiden tot een object die attributen beschrijft zoals in een meer traditioneel informatiemodel en een tabel in een database.</p> <p>In deze context wordt een triple als een resource beschouwd.</p> Resource - Triple <p>Let Op: een resource wordt in de terminologie van Linked Data anders gedefinieerd dan in de context van dit rapport. Zie de Linked Data beschrijving voor meer informatie. In de context van deze documentatie wordt niet de definitie van resource zoals gedefinieerd in Linked Data gebruikt.</p> <p>Het object in de ene triple kan het subject worden in een ander, waarbij het predicate dit subject aan een ander object koppelt of een attribuut van dit subject beschrijft. Wanneer twee of meer triples met elkaar verbonden zijn, resulteert dit in een \u2018graph\u2019 (graaf). Op deze manier kunnen triples informatie/data met elkaar verbinden, ook wanneer deze oorspronkelijk in verschillende tabellen stonden. De graph die zo ontstaat, kan gebruikt worden om te \u2018navigeren\u2019 van subject naar object naar subject naar object.</p>"},{"location":"afscherming/autorisatie/#resource-sparql-endpoint","title":"Resource: SPARQL Endpoint","text":"<p>Een graph wordt opgeslagen in een specifieke database, namelijk een \u2018triple store\u2019. Ook deze wordt niet direct ontsloten voor gebruikers, maar beveiligd en afgeschermd door een API. Voor Linked Data is een \u2018SPARQL API\u2019 of \u2018SPARQL endpoint\u2019 een veelgebruikte API. SPARQL is een \u2018query language\u2019, een vraagtaal voor Linked Data obv internet technologie (oa HTTP).</p> <p>In deze context is de resource de graph en het bijbehorende SPARQL API / endpoint.</p> Resource - SPARQL Endpoint <p>Een bijzondere toegevoegde waarde van het publiceren van data als Linked Data is het federatief kunnen bevragen van data. Datasets zijn vrijwel altijd opgeslagen in silo\u2019s.  Mbv Linked Data kunnen datasets gemakkelijk aan elkaar gerelateerd worden en op een federatieve manier in \u00e9\u00e9n keer bevraagd worden. De Kadaster Knowledge Graph is hier een voorbeeld van met de BRK, BGT, BRT en BAG gekoppelde datasets.</p> <p>De koppeling van elke graph (of resource) vereist de opname van een gedeeld identificerend sleutelveld of attribuut (zie informatiekundige kern). In onderstaande figuur zijn deze attributen of sleutelvelden gedefinieerd als een BSN- of KvK-nummer waarmee drie verschillende graphs met elkaar in verband kunnen worden gebracht. Met behulp van deze velden kan \u00e9\u00e9n enkele query worden geschreven, verwijzend naar elke SPARQL API en het relevante sleutelveld, om zo de benodigde informatie uit drie bronnen op te halen.</p> <p>In deze context is de resource - elke triple, een hele dataset, de gekoppelde datasets, wellicht een selectie uit een dataset - de resource is hier niet eenduidig.</p> Resource - SPARQL Endpoints <p>Een resource is dus nog niet zo eenvoudig. Er is hier ook een gelaagdheid in te beschrijven.  Het meest elementaire onderdeel is een triple. Gerelateerde triples vormen een graph voor een subset van gerelateerde gegevens, traditioneel vaak een object of tabel genoemd. Alle triples en graphs binnen \u00e9\u00e9n context vormen een dataset. Zo\u2019n dataset is ontsloten met een bijbehorende API, wat deze in een silo plaatst. Wanneer een dataset relaties naar andere datasets bevat, kunnen refereerde datasets via hun eigen API bevraagd worden. Een selectie uit \u00e9\u00e9n dataset wordt een subset genoemd. Gerelateerde selecties over meerdere datasets heen wordt ook subset genoemd en soms superset.</p> <p>In het kader van het afschermen van gegevens en het autoriseren van de juiste mensen (en machines) met de juiste rechten om deze afgeschermde gegevens juist w\u00e9l op te vragen, is deze gelaagdheid van belang. Afscherming en autorisatie in de technologie van nu, voornamelijk REST API\u2019s, is binair: je hebt toegang of je hebt het niet. En dat is dan voor de gehele API. Om toch onderscheid en variaties te kunnen doen, worden meerdere API\u2019s gepubliceerd voor specifieke doeleinden of doelgroepen.</p> Resource - Samenvatting <p>Met SPARQL API\u2019s is het mogelijk om vrije queries (vragen) te stellen per dataset/-silo of over datasets heen. Autorisaties en variaties in doelgroepen is hierin echter veel ingewikkelder. Dit is precies het onderwerp van dit project.</p> <p>Zie ook de glossary voor de verschillen tussen dataset, subset, database, graph en subgraph</p> <p>In de volgende sectie worden enkele van de bestaande implementaties van autorisatie voor federatieve eindpunten besproken. Deze zijn niet uitputtend, maar geven een indicatie van de huidige benaderingen.</p>"},{"location":"afscherming/bestaande-implementaties/","title":"Bestaande Implementaties","text":"<p>Een van de onderdelen van het desk research was de beoordeling van bestaande oplossingen voor toegangscontrole voor Linked Data bronnen. De lijst van implementaties is niet uitputtend, maar geeft wel een beeld van welke implementaties we zijn tegengekomen. </p> <p>In de volgende secties zullen deze implementaties worden besproken en wordt ingegaan op de kansen en uitdagingen voor dit project.</p> <p>Hierbij komen de volgende implementaties aan bod:</p> <ul> <li>PoC Topsector Logistiek &amp; iSHARE</li> <li>Personal Health Train (FAIR Data Train)</li> <li>Nuts Bolt voor KIK-V</li> <li>Solid Project</li> <li>GEMMA verwerkingenlogging</li> </ul>"},{"location":"afscherming/bestaande-implementaties/#poc-topsector-logistiek-ishare","title":"PoC Topsector Logistiek &amp; iSHARE","text":""},{"location":"afscherming/bestaande-implementaties/#probleem-context","title":"Probleem Context","text":"<p>In de logistieke sector bestaat er een keten van stakeholders die allemaal toegang nodig hebben tot informatie over een bepaald project. Deze informatie is vaak gevoelig, vooral in het kader van concurrentie. Daarnaast heeft de overheid verantwoordelijkheden waarvoor ook data nodig is, maar dat betekent  niet toegang tot de volledige dataset(s). Het is dus belangrijk om ervoor te zorgen dat verschillende belanghebbenden op verschillende tijdstippen toegang hebben tot verschillende subsets van informatie. Door de verschillende belangen zijn verschillende oplossingsrichtingen mogelijk en als Proof-of-Concept uitgewerkt.</p>"},{"location":"afscherming/bestaande-implementaties/#oplossing","title":"Oplossing","text":"<p>Voor de PoC zijn twee aanpakken voor autorisatie getest. E\u00e9n aanpak werkt obv het cre\u00ebren van Predefined Sub-Graphs. Op basis van de context, die opgebouwd is uit query + autorisatie + doelbinding, wordt periodiek een dataset opgebouwd op waarvoor toegang ingeregeld is. Op deze subset kunnen vervolgens vrije queries uitgevoerd worden. Deze subset is feitelijk een kopie van de originele data die via een tweede eindpunt beschikbaar wordt gesteld. Deze oplossing past bij de informatievoorziening benodigd voor de overheidsverantwoordelijkheid / stakeholder.</p> <p>De andere aanpak werkt met Predefined Queries die op de gehele dataset uitgevoerd kunnen worden. Aangezien voor het logistieke proces de informatiebehoefte van tevoren duidelijk is (uitgewerkt), is het mogelijk om de benodigde queries van tevoren op te stellen en te valideren vanuit het perspectief van toegang. Dit past bij de concurrerende stakeholders in de logistieke keten.</p>"},{"location":"afscherming/bestaande-implementaties/#inzichten-voor-lock-unlock","title":"Inzichten voor Lock-Unlock","text":"<ul> <li>Deze PoCs tonen aan dat er verschillende autorisatiemogelijkheden zijn voor Linked Data, die   verder gaan dan de REST API oplossingen (het open-/dichtzetten) van een SPARQL endpoint.</li> <li>Volledige query mogelijkheden blijven behouden door het cre\u00ebren van een nieuwe subset (Predefined   Sub-Graphs) met een eigen endpoint.</li> <li>Ook de richting wordt impliciet bepaald door het selectief genereren van een subset.</li> <li>Deze implementatie laat zien dat Predefined Queries en Predefined Sub-Graphs mogelijk zijn \u2026   en ook dat dit behoorlijke impact heeft en voorbereidingen vraagt. Vrij bevragen direct op de data   is nog niet zomaar mogelijk.</li> </ul> <p>Zie ook</p> <ul> <li>Github reposity van de PoC</li> </ul>"},{"location":"afscherming/bestaande-implementaties/#personal-health-train-pht","title":"Personal Health Train (PHT)","text":""},{"location":"afscherming/bestaande-implementaties/#probleem-context_1","title":"Probleem Context","text":"<p>In het zorgdomein was een oplossing nodig voor het ontsluiten en uitvoeren van onderzoek naar gevoelige zorginformatie. Hier moesten de gegevens bij de bron blijven (bijvoorbeeld gegevens van een bepaald ziekenhuis) en mocht er geen persoonlijk identificeerbare informatie buiten deze bron worden gedeeld.</p>"},{"location":"afscherming/bestaande-implementaties/#oplossing_1","title":"Oplossing","text":"<p>In deze context wordt de analogie van een trein, een station en een spoor gebruikt, waarbij de trein een bepaalde vraag of onderzoeksvraag vertegenwoordigt, het station een bepaald ziekenhuis of een bepaalde gegevensbron en het spoor de infrastructuur waarop de vraag tussen stations wordt overgedragen. De query die naar elk station wordt verzonden, vraagt om dezelfde informatie uit elke gegevensbron.</p> <p>De PHT is een federatieve oplossing waarbij een \u2018technical bubble\u2019 infrastructuur wordt gecre\u00eberd van verschillende 'stations' met een bepaalde samenwerkingsovereenkomst en onderzoekers in deze bubbel informatie van het station kunnen opvragen. In sommige gevallen kunnen stations ook worden gemaakt om zeer specifieke vragen te behandelen en daarom een subset van de informatie bevatten die beschikbaar is in de oorspronkelijke gegevensbron en/of voorbereid zijn om alleen gecertificeerde (vooraf gedefinieerde) vragen te behandelen. De methode ondersteunt ook dat de onderzoeker geen inzicht krijgt in de data op persoonsniveau maar wel de gewenste analyse kan uitvoeren. Hiervoor wordt federated learning toegepast (zie ook PET\u2019s).</p> Personal Health Train <p>Zie ook</p> <ul> <li>Open source tech stack: Vantage6</li> <li>Personal Health Train: https://www.dtls.nl/fair-data/personal-health-train/ </li> <li>Horizontale en verticale partities: zie Azure Docs</li> </ul>"},{"location":"afscherming/bestaande-implementaties/#nuts-bolt-voor-kik-v","title":"Nuts Bolt voor KIK-V","text":""},{"location":"afscherming/bestaande-implementaties/#probleem-context_2","title":"Probleem Context","text":"<p>KIK-V, Keteninformatie Kwaliteit Verpleeghuiszorg, is een initiatief waarin instellingen voor verpleeghuiszorg (als aanbieder) en andere partijen met een publieke taak (als afnemer) samenwerken om de gegevensuitwisseling over kwaliteit en bedrijfsvoering te verbeteren. Het doel is het stroomlijnen van de uitwisseling van informatie, het beter afstemmen van nieuwe uitvragen en het meer hergebruiken van informatie.</p>"},{"location":"afscherming/bestaande-implementaties/#oplossing_2","title":"Oplossing","text":"<p>Nuts is een samenwerkingsverband van partijen in de zorg om tot een breed gedragen, open, decentrale infrastructuur te komen ten behoeve van de uitwisseling van gegevens in de zorg en het medische domein. \u201cBolt\u201d is de Nuts-term voor een concrete toepassing van de Nuts-standaarden om een tastbare use-case in de zorg mogelijk te maken. De Nuts standaarden focussen zich vooral op authenticatie en daarbij wordt o.a. gewerkt met Authorisation Credentials die aangeven welke data een gebruiker mag inzien. Dit zorgt ervoor dat gebruikers dus niet alle data kunnen bevragen. Daarnaast is in de implemenatie voor KIK-V ook gewerkt met gevalideerde vragen (predefined queries). Indien de gebruiker een credential heeft voor die gevalideerde vraag dan kan die de query uitvoeren.</p>"},{"location":"afscherming/bestaande-implementaties/#inzichten-voor-lock-unlock_1","title":"Inzichten voor Lock-Unlock","text":"<ul> <li>In de Nuts Bolt implementatie voor KIK-V wordt zowel gewerkt met autorisaties op data- als query   niveau door middel van predefined sub-graphs en predefined queries. Dit biedt dus weinig   flexibiliteit voor de gebruikers.</li> <li>Hiervoor werken ze met \u201ccredentials\u201d. In dit geval is KIK-V de \u201cissuer\u201d van de credentials en de   gebruikers zijn de \u201cholders\u201d. De credentials worden zowel gebruikt voor het uitgeven van de   queries als toegang tot de data.</li> </ul> Nuts Bolt voor KIK-V <p>Zie ook:</p> <ul> <li>Implementatie van Nuts Bolt voor KIK-V</li> <li>Nuts Specificatie</li> <li>Nuts Documentatie</li> </ul>"},{"location":"afscherming/bestaande-implementaties/#solid-project","title":"Solid Project","text":""},{"location":"afscherming/bestaande-implementaties/#probleem-context_3","title":"Probleem Context","text":"<p>Uitgangspunt van de (social) platformen van tegenwoordig (denk aan Facebook, Google etc.), is dat je een account voor elk platform nodig hebt. De data die je produceert bevindt zich ook in dat platform \u2026 en is daarbuiten niet toegankelijk. Gebruikers hebben beperkte of vooral geen controle over hun eigen data en de data zit ook vast in de silo\u2019s bij techgiganten. Sterker nog, dat is de manier waardoor deze techgiganten zo groot geworden zijn!</p>"},{"location":"afscherming/bestaande-implementaties/#oplossing_3","title":"Oplossing","text":"<p>Het Solid Project is bedacht door Sir Tim Berners Lee, uitvinder van het web. Het Solid Project introduceert het concept van een Personal Online Datastore (POD), een online opslagruimte voor mij persoonlijk. Platformen zijn nog steeds belangrijk en kunnen nog steeds werken, door gebruik te maken van en de data op te slaan op in de PODs van gebruikers. De data wordt zo decentraal voor de platformen en juist centraal voor de gebruikers opgeslagen. Het Solid Porject is een reeks (Linked Data) specificaties voor standaarden die ervoor zorgt dat het concept van PODs kan gaan werken. De data wordt gescheiden van de applicaties. Het is daarom mogelijk om met verschillende applicaties gebruik te maken van dezelfde data \u2026 mits toestemming (autorisatie) gegeven door de gebruiker. Gebruikers krijgen zo regie over hun eigen data en wie (of wat) toegang heeft tot hun data.</p>"},{"location":"afscherming/bestaande-implementaties/#inzichten-voor-lock-unlock_2","title":"Inzichten voor Lock-Unlock","text":"<ul> <li>Solid Project is gebaseerd op Linked Data</li> <li>Autorisatie is heel specifiek per dataset per gebruiker vanuit het concept van PODs. Het verlenen   van toegang tot je eigen data is heel fijnmazig en kan door de eigenaar zelf worden ingesteld en   gewijzigd. Dit maakt dat er veel autorisatiemogelijkheden zijn, maar het beheer daarvan is al snel   erg complex en onbegrijpelijk voor de \u2018normale gebruiker\u2019</li> <li>Door toepassing van Linked Data is \u2018cross dataset\u2019 bevragen, \u2018queri\u00ebn\u2019 over meerdere endpoints   zeer krachtig en goed mogelijk \u2026 en tegelijk een uitdaging op zich als het 19 mln burgers betreft.   Het is wel in de basis zeer federatief opgezet.</li> <li>De specificatie is nog volop in ontwikkeling en er zijn nog weinig volwassen implementaties.</li> </ul> Solid Project <p>Zie ook:</p> <ul> <li>Solid Project</li> </ul>"},{"location":"afscherming/bestaande-implementaties/#gemma-verwerkingenlogging","title":"GEMMA Verwerkingenlogging","text":""},{"location":"afscherming/bestaande-implementaties/#probleem-context_4","title":"Probleem Context","text":"<p>Gemeenten en andere overheidsorganisaties gebruiken bij de uitvoering van hun taken veel (persoons)gegevens. Vanuit de AVG zijn er duidelijke regels over het verwerken van persoonsgegevens. (Overheids)organisaties zijn bijvoorbeeld verplicht om dit gebruik vast te leggen en inzichtelijk te maken voor burgers. Ook moeten zij kunnen aantonen dat verwerking van deze gegevens voldoet aan de belangrijkste beginselen van verwerking zoals rechtmatigheid en doelbinding. Zolang dat binnen \u00e9\u00e9n (overheids)organisatie plaatsvindt, kunnen autorisaties en doelbinding (tot zekere hoogte) goed gecontroleerd worden. Zodra dat over organisatiegrenzen heen gaat en er API koppelingen tussen systemen van verschillende organisaties zijn, wordt dat moeilijk en complex.</p>"},{"location":"afscherming/bestaande-implementaties/#oplossing_4","title":"Oplossing","text":"<p>De Verwerkinggenlogging is een API-standaard die is ontwikkeld door VNG Realisatie en deze standaard is opgenomen in de GEMMA referentiearchitectuur. Deze API-standaard biedt leveranciers van informatiesystemen gestandaardiseerde API-specificaties voor het vastleggen en ontsluiten van metagegevens behorend bij vastgelegde (logging) verwerkingen.</p> <p>De API standaard is ontwikkeld voor gemeenten en gemeentelijke samenwerkingsverbanden. Er zitten echter geen gemeente-specifieke zaken in de standaard dus andere organisaties kunnen de standaard ook toepassen. Door ontwikkeling vindt dan ook op dit moment (\u201923/\u201924) plaats door MinBZK.</p>"},{"location":"afscherming/bestaande-implementaties/#inzichten-voor-lock-unlock_3","title":"Inzichten voor Lock-Unlock","text":"<ul> <li>Bij de controle voor toegang (autorisatie) is het voor een data-leverende partij niet mogelijk om   te controleren of rechtmatigheid en doelbinding valide zijn. Dat komt omdat deze bij het   specifieke gebruik ligt, die binnen de organisatiegrenzen van de vragende partij ligt. Daarom is   de verantwoording op rechtmatigheid en doelbinding voor beide partijen: de vragende partij dient   de specifieke gebruiker en specifieke casus vast te leggen en daarvan de referentie door te geven   aan de data-leverende partij, welke verplicht is om deze referentie vast te leggen en globale   autorisatiecontrole toe te passen voor de vragende organisatie.</li> <li>Verwerkingenlogging biedt (daarom) controle achteraf en niet vooraf. Autorisatie (aan de   voortkant) is daarom niet te baseren op de verwerkingenlogging of controle op doelbinding.</li> <li>In het kader van autorisatie is de verwerkingenlogging (dus) niet relevant. Voor de verantwoording   voor het verwerken van persoonsgegevens is dit juist w\u00e9l relevant, zowel aan data-vragende kant   als data-leverende kant.</li> </ul> GEMMA Verwerkingenlogging <p>Zie ook:</p> <ul> <li>https://vng-realisatie.github.io/gemma-verwerkingenlogging</li> </ul>"},{"location":"afscherming/onderzoeksvoorstel/","title":"Onderzoeksvoorstel","text":"<p>De vraagstelling is het kunnen afschermen () van Linked Data waarbij diverse requirements van afschermingspatronen worden gesteld. Er zijn diverse oplossingsrichtingen voor de verschillende typen API's ... maar er bestaat nog geen (standaard) oplossing voor autorisatie als Linked Data. Dat is wat we willen onderzoeken in het Lock-Unlock project.</p>"},{"location":"afscherming/oplossingsrichtingen/","title":"Oplossingsrichtingen","text":"<p>Gegeven de behoefte aan autorisatie in een federatieve bevraging \u00e9n de requirements van afschermingspatronen zijn er verschillende technologische oplossingsrichtingen te bedenken.</p> <p>Verschillende technologische oplossingen bieden verschillende kansen en uitdagingen om de doelen van Lock-Unlock te behalen. De technologische oplossingen zijn eindeloos en toch beperkt in het kader van een federatief datastelsel en Linked Data. In ons desk research zijn we diverse standaarden, voorbeelden en implementaties tegengekomen (zie vorige secties).</p> <p>In het hoofdstuk federatieve bevraging wordt al het onderscheid en verschillen beschreven tussen de verschillende soorten REST vs GraphQL vs SPARQL. Tbv afscherming en autorisatie bestaan er voor REST API's en GraphQL API's al gestandaardiseerde uitwerkingen. Rondom Linked Data zijn er wel idee\u00ebn en concepten maar bestaat autorisatie als Linked Data nog niet echt. Deze kunnen we grofweg verdelen en bundelen in de volgende selectie van technologische oplossing(srichtingen):</p>"},{"location":"afscherming/oplossingsrichtingen/#query-auditing","title":"Query Auditing","text":"<p>Gegeven de wens om vrije bevraging (query) tot onze beschikking te houden \u00e9n te voldoen aan de wens tot auditing, is het noodzakelijk om vast te leggen welke queries er worden gesteld. Dit is vooral van belang in geval van Linked Data en minder in geval van REST API's en GraphQL API's, aangezien deze minder mogelijkheden bieden voor alle afschermingspatronen.</p> <p>Deze technologische oplossing is geen oplossing voor autorisatie. Bij alleen query auditing kan de gebruiker namelijk alle data bevragen en worden slechts de queries met bijbehorende context (denk bijv. aan de gebruiker en meegegeven referentie naar doelbinding) opgeslagen. Vervolgens kan er achteraf handmatig of wellicht automatisch bepaald worden of er onrechtmatige vragen/queries zijn gesteld en of dat er onterecht toegang is verkregen tot gesloten gegevens. </p> <p>Deze oplossing raakt ook de GEMMA verwerkingenlogging.</p> Query Auditing <p>Kansen voor Lock-Unlock</p> <ul> <li>Om te kunnen verantwoorden dat (met name persoons)gegevens op een juiste manier verwerkt worden,   is het nodig om de verwerking te bewaren. Dat gebeurt door de queries te loggen.</li> <li>Het loggen van queries en context biedt altijd de mogelijkheid om later onregelmatigheden op te   sporen.</li> </ul> <p>Uitdagingen voor Lock-Unlock</p> <ul> <li>Query Auditing is geen oplossing voor autorisatiecontroles.</li> <li>Uitdagingen rondom het kunnen toepassen van de GEMMA verwerkingenlogging:<ul> <li>De standaard wordt doorontwikkeld wat onzekerheid geeft rondom de stabiliteit van de   standaard.</li> <li>Query logging is niet gestandaardiseerd en mogelijkheden in producten zijn nog onduidelijk.</li> </ul> </li> </ul>"},{"location":"afscherming/oplossingsrichtingen/#autorisatie-in-rest-api","title":"Autorisatie in REST API","text":"<p>Bij een REST API wordt data in JSON formaat (JavaScript Object Notation) geretourneerd over HTTP. Dit laatste onderdeel, namelijk HTTP, geeft direct de mogelijkheden van deze oplossingsrichting. Alles wat met HTTP kan, kan met REST API\u2019s. Dit is gestandaardiseerd en is op dit moment breed beschikbaar in vele platformen op een uniforme wijze. De standaard die hier voornamelijk een rol speelt, is OAuth2. Hierin is het mogelijk om met username/password, een token als een \u2018API Key\u2019 of een certificaat authenticatie te doen en rollen mee te geven om autorisatie af te dwingen.</p> <p>REST API\u2019s zijn voor specifieke ontsluiting van data. Een soort ON/OFF beslissing. Een REST API kan een gehele dataset betreffen. Of juist een subset, waarbij een verticale subset gemakkelijker is dan een horizontale subset. Een REST API is altijd specifiek en daarom wordt voor elke toepassing of ontsluiting een nieuwe API ontwikkeld. Een samengestelde dataset of meerdere datasets betekent een nieuwe API. Als een andere subset dan in de beschikbare API\u2019s gewenst is, betekent dat de ontwikkeling van een nieuwe API.</p> Authorisation REST API <p>Kansen voor Lock-Unlock Veel data is al dmv een API beschikbaar, waarbij dit al vaak REST API\u2019s betreft. Soms nog voorlopers als SOAP. De techniek is gestandaardiseerd met HTTP (oa OAuth2) en in vele technologie stacks beschikbaar.</p> <p>Uitdagingen voor Lock-Unlock Afscherming van data is op het niveau van de REST API. Autorisaties geven toegang of niet. Het is aan of uit, ja of nee. Er zijn geen gradaties van autorisaties mogelijk. Er zijn geen mogelijkheden om andere datasets of subsets op te vragen dan dat er in de API\u2019s (collectie) wordt aangeboden. Er is orkestratie noodzakelijk om meerdere datasets over meerdere API\u2019s te bevragen. Navigeren en vrij bevragen is niet mogelijk.</p> Requirement Support Horizontale subset Verticale subset \u2705 Richting beperken \u2705 Vrije query \u274c"},{"location":"afscherming/oplossingsrichtingen/#autorisatie-in-graphql-api","title":"Autorisatie in GraphQL API","text":"<p>GraphQL is gebaseerd op een voor-gedefinieerd schema (zie voorbeeld). Dit schema is een object geori\u00ebnteerde benadering waarin objecten en de relaties beschreven zijn. Welke objecten beschikbaar zijn, welke relaties en in welke richting die relaties mogelijk zijn, staat gedefinieerd in het schema. Dit geeft mogelijkheden voor het afschermen van data. Er kunnen filters toegepast worden, zowel als gebruiker en in de API. Bijvoorbeeld: geef alle KVKInschrijvingen met rechtsvorm \"BV\". Of in het voorbeeld hiernaast: vanuit KVKInschrijving kan wel het adres opgevraagd worden maar niet andersom.</p> <p></p> <p>Met een GraphQL Gateway is het mogelijk om meerdere samenhangende datasets tegelijkertijd te bevragen.\u00a0De Gateway distribueert de query en stelt de resultaten samen tot een samenhangend geheel (schema stitching).</p> <p></p> <p>Er zijn verschillende manieren om de objecten in het schema te beveiligen. Net zoals met REST API\u2019s kan wel of geen toegang verleent worden tot de hele API. Met GraphQL is het ook mogelijk om in het schema te configureren welke rollen toegang krijgen tot objecten of attributen daarvan. Waar in REST API\u2019s meerdere API\u2019s beschikbaar gemaakt zouden worden, kan dat met GraphQL in \u00e9\u00e9n GraphQL API/Gateway, uiteraard beperkt tot het betreffende schema.</p> <p>Kansen voor Lock-Unlock Verfijnde autorisatie op schema niveau mogelijk. Binnen het schema zijn (vrije) queries mogelijk. Gateways ondersteunen federatieve queries.</p> <p>Uitdagingen voor Lock-Unlock GraphQL kan aangeboden worden op basis van een Linked Data architectuur, maar volgt niet volledig de Linked Data principes.</p> Requirement Support Horizontale subset Verticale subset \u2705 Richting beperken \u2705 Vrije query"},{"location":"afscherming/oplossingsrichtingen/#linked-data-predefined-queries","title":"Linked Data - Predefined Queries","text":"<p>Het is mogelijk om in een SPARQL endpoint vooraf queries te defini\u00ebren. Hoewel de basis vrije bevraging is, worden alleen van tevoren gecontroleerde queries toegestaan. De vooraf gedefinieerde queries kunnen natuurlijk vari\u00ebren per rol en wellicht kunnen die achter een gewone REST API ge\u00efmplementeerd worden. De uitwerking hiervan is dat er w\u00e9l Linked Data technieken gebruikt worden, maar dat de oplossing dichter bij het REST API\u2019s scenario komt mbt gesloten data. Voor open data is een open (dus apart) SPARQL endpoint beschikbaar.</p> <p></p> <p>Kansen voor Lock-Unlock</p> <p>Deze oplossing maakt het mogelijk om Linked Data technieken te gebruiken en data af te schermen. De Predefined Queries zijn een eenvoudige manier om afscherming mogelijk te maken \u00e1 la REST API\u2019s.</p> <p>Uitdagingen voor Lock-Unlock</p> <p>Er is geen standaard voor het vastleggen Predefined Queries. Dit is daarom afhankelijk van de technische oplossing of dit beschikbaar is of niet. Deze oplossing levert nauwelijks meer dan de mogelijkheden bij REST API\u2019s. Het is namelijk voor de gebruiker niet meer mogelijk om zelf queries op te stellen en te navigeren door de knowledge graph voor gesloten data.</p> Requirement Support Horizontale subset Verticale subset \u2705 Richting beperken \u2705 Vrije query \u274c"},{"location":"afscherming/oplossingsrichtingen/#linked-data-predefined-subgraphs","title":"Linked Data - Predefined Subgraphs","text":"<p>Zoals er met REST API\u2019s meerdere API\u2019s beschikbaar worden gesteld voor de verschillende doelgroepen en autorisaties, is het in Linked Data mogelijk om meerdere sub-graphs te defini\u00ebren / publiceren. Dit geeft vergelijkbare mogelijkheden wat betreft afscherming en toegang en biedt in tegenstelling tot Predefined Queries w\u00e9l de mogelijkheid tot vrij query\u2019n.</p> <p></p> <p>Kansen voor Lock-Unlock</p> <p>Door het werken met Predefined Sub-Graphs is het mogelijk om toegang op subset niveau te regelen, zowel horizontaal (gebruiker X mag alleen bij die specifieke instanties) als verticaal (gebruiker Y mag wel de koopsom zien maar niet de eigenaar). Op die sub-graphs kan de gebruiker vervolgens vrij query\u2019n en ook federatieve queries doen.</p> <p>Uitdagingen voor Lock-Unlock</p> <p>Aangezien bij deze oplossing niet naar de querykant zelf wordt gekeken, is het slechts beperkt mogelijk om de richting van de vraag te beperken. Daarnaast zijn de mogelijkheden beperkt tot de beschikbare Predefined Sub-Graphs. Dat betekent voorbereiding en beperking in afscherming. De sub-graphs zijn afgeleiden van de originele totale dataset / graph. Het mechanisme voor het beschikbaar maken van de sub-graphs bepaalt actualiteit, beschikbaarheid, etc.</p> Requirement Support Horizontale subset \u2705 Verticale subset \u2705 Richting beperken Vrije query"},{"location":"afscherming/oplossingsrichtingen/#autorisatie-als-linked-data","title":"Autorisatie als Linked Data","text":"<p>De autorisatie als Linked Data is een geheel andere benadering dan voorgaande technologische oplossingsmogelijkheden. Het houdt in dat de autorisatie zelf als Linked Data wordt uitgedrukt. Daarvoor zijn twee onderdelen nodig:</p> <ol> <li>De autorisatie ontologie is een \"woordenboek\" welke de autorisatie terminologie bevat. Denk aan    Gebruiker, Rol, Toegestaan, Autorisatie hi\u00ebrarchie, etc. Zo\u2019n vocabulaire zou gestandaardiseerd    moeten zijn. Deze bestaat op dit moment nog niet, maar sluit goed aan bij de wereld van Linked    Data.</li> <li>De autorisatie configuratie bevat de specifieke autorisatieregels voor een resource. In deze    configuratie wordt autorisatie metadata toegevoegd (verrijkt) aan bestaande ontologie van de    resource. Bijvoorbeeld Binnen de BRK is het anonieme Gebruikers niet toegestaan het    LaatsteKoopsom Predicate op te vragen.</li> </ol> <p>Deze twee delen samen vormen een autorisatiebeleid dat door machines te interpreteren en gebruiken is. Door dit autorisatiebeleid uit te drukken in Linked Data kunnen dezelfde technieken gebruikt worden als voor het bevragen van de Linked Data zelf.</p> <p></p> <p>Kansen voor Lock-Unlock</p> <ul> <li>Autorisaties kunnen gerelateerd worden aan de reden van toegang (of niet) naar data. Dit is in   bestaande technologische oplossing niet of nauwelijks mogelijk. Hier liggen enorme kansen voor   vooraf en achteraf controle en uitleg.</li> <li>Autorisatie wordt in dezelfde \u201ctechnische taal\" uitgedrukt als de data.</li> <li>Uitgebreide evaluatie van vrije queries, data partionering, etc, etc wordt hierdoor mogelijk.</li> <li>Door de standaardisatie is meervoudig gebruik in meerdere implementaties en oplossingen mogelijk   van autorisatiebeleid.</li> </ul> <p>Uitdagingen voor Lock-Unlock</p> <ul> <li>Er bestaat nog geen gestandaardiseerde ontologie voor autorisatie. Hiervoor zullen wij zelf de   eerste aanzet moeten doen (er zijn wel enkele papers beschikbaar met suggesties en voorbereidend   werk).</li> <li>Er zijn (dus) ook nog geen standaard implementaties voor deze oplossingsrichting.</li> </ul>"},{"location":"autorisatie-als-linkeddata/","title":"Autorisatie als Linked Data ('unlock')","text":"<p>Dit hoofdstuk beschrijft het concept om op basis van Linked Data autorisatieregels vast te leggen en wel op zo'n manier dat een implementatie daar direct gebruik van kan maken om SPARQL queries te verwerken zodat er geen afgeschermde gegevens geraadpleegd kunnen worden. </p> <p>Dit concept wordt verder uitgewerkt inclusief een beschrijving van de autorisatie ontologie zoals die ontwikkeld is in dit project. Het betreft hier een Proof-of-Concept (PoC). </p> <p>Om dit concept te implementeren zijn er meerdere strategie\u00ebn mogelijk. Een paar implementatie strategie\u00ebn worden kort toegelicht en er zijn twee PoC implementaties gemaakt om de werking van het geheel te kunnen onderzoeken en te kunnen demonstreren.</p> <p>Dit hoofdstuk sluit af met een evaluatie van de twee implementatie strategie\u00ebn.</p>"},{"location":"autorisatie-als-linkeddata/#leeswijzer","title":"Leeswijzer","text":"<ul> <li>Concept toelichten</li> <li>Beschrijving autorisatie (&amp; authenticatie) ontologie</li> <li>Autorisatie als Linked Data implementaties</li> <li>Demonstrators van de twee implementaties</li> <li>Evaluatie en vergelijking van twee demonstrators</li> </ul>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/","title":"Autorisatie Ontologie","text":"<p>Binnen het Autorisatie als Linked Data concept speelt de Autorisatie Ontologie een belangrijke rol. Deze ontologie wordt op deze pagina verder toegelicht maar eerst wordt ingegaan op de ondersteunende ontologie\u00ebn.</p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#ondersteunende-ontologieen","title":"Ondersteunende Ontologie\u00ebn","text":""},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#authenticatie-ontologie","title":"Authenticatie Ontologie","text":"<p>Hoewel we authenticatie als out-of-scope hebben gesteld in dit project hebben we natuurlijk behoefte om gebruikers vast te leggen die vervolgens gekoppeld kunnen worden aan autorisatieregels. Hiervoor is een overversimpelde authenticatie ontologie gemaakt met een klasse \"User\". </p> User klas in authenticatie ontologie <p>Een standaard gebruiker is alvast aanwezig in deze autorisatie ontologie en dat is de gebruiker \"anonymous\" oftewel een gebruiker die niet ingelogd is. Om gebruikers te definieren kan er een nieuwe dataset gemaakt worden op basis van de authenticatie ontologie en daarmee kunnen nieuwe gebruikers (\"User\") aangemaakt worden.</p> <p>Deze ontologie is als schema te bekijken via labs.kadaster.nl.</p> <p>De autorisatie ontologie maakt gebruik van de authenticatie ontologie. Dit kan door middel van een <code>owl:import</code> statement te maken, waarbij de authenticatie ontologie geimporteerd wordt.  </p> <p>Zie ook oplevering#authenticatie-ontologie.</p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#logging-ontologie","title":"Logging Ontologie","text":"<p>Een simpele logging ontologie is opgezet voor het loggen van SPARQL queries inclusief datumstempels en natuurlijk een koppeling naar de gebruiker. Zie hieronder voor een weergave van de ontologie. Gebeurtenissen zoals binnenkomende Sparql queries worden vastgelegd met tijdstempels en inclusief referentie naar de persoon.  </p> Logging ontologie <p>Dit heeft als doel om aan te kunnen tonen dat we queries en de afhandeling ervan goed kunnen loggen om evt in een later stadium audits te kunnen ondersteunen. Implicaties van deze logging (denk aan AVG bijvoorbeeld) is buiten scope van dit project. </p> <p>Zie ook oplevering#logging-ontologie.</p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#autorisatie-ontologie","title":"Autorisatie Ontologie","text":""},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#overzicht","title":"Overzicht","text":"<p>De autorisatie ontologie importeert de authenticatie ontologie datasets zodat gebruikers(users) aanwezig zijn als read-only data. Vervolgens kunnen deze gebruikers gerelateerd worden aan verschillende regels die elk specifieke informatie nodig hebben. Hieronder een overzicht van de Autorisatie ontologie. </p> Overzicht autorisatie ontologie <p>Deze ontologie is als schema te bekijken via labs.kadaster.nl.</p> <p>Zie ook oplevering#autorisatie-ontologie.</p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#gebruikers-en-autorisatieregels","title":"Gebruikers en Autorisatieregels","text":"<p>Een gebruiker kan verbonden zijn met meerdere rollen. Rollen kunnen verbonden zijn met meerdere security groeps. Elke security groep kan meerdere (autorisatie) regels bevatten. </p> Gebruikers en autorisatieregels <p>Op deze manier kunnen individuele gebruikers gekoppeld worden aan Rollen die via de tussenstappen uiteindelijk gekoppeld zijn aan verschillende autorisatieregels. De aanwezigheid van security groeps zorgt ervoor dat bijelkaarhorende regels gegroepeerd worden opdat deze set makkelijk te herbruiken zijn voor andere rollen. </p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#regeltypes","title":"Regeltypes","text":"<p>Er zijn meerdere regeltypes die elk of een andere functionaliteit bieden om autorisatie te modelleren. Hieronder een diagram van verschillende regeltypes. </p> Regeltypes <p>Zo is er een regel (<code>InAccessableService</code>) die zogenaamde 'service' gebruik binnen SPARQL aan banden kan leggen. Andere voorbeelden van regeltypes zijn bijvoorbeeld de regeltype die toegang tot graphs kan reguleren, regelype voor het filteren op predicaten (in bepaalde graphs) en de horizontale subset regeltype. Enkele van deze regeltypes zijn ge\u00efmplementeerd zoals regels voor graaf-gebaseerde autorisatie, predicaat-gebaseerde autorisatie en horizontale subsets. Het betreft hier wel een Proof-of-Concept implementatie. Directionele regels zijn buiten beschouwing gelaten. Het lijkt heel goed mogelijk om nieuwe regeltypes toe te voegen die bijvoorbeeld andere informatie behoeven. </p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#graaf-gebaseerde-autorisatieregels","title":"Graaf-gebaseerde Autorisatieregels","text":"<p>Met de <code>AccessibleDataset</code> regel kun je gebruikers toegang geven tot \"Datasets\". Een Dataset bestaat uit 0 of meer graven (graphs). Oftewel hiermee kun je instellen welke gebruiker toegang heeft tot welke graven in de triplestore. </p> Graaf-gebaseerde autorisatieregels <p>Via SecurityGroeps kunnen 'instanties' (of eigenlijk individuals in Linked Data) van deze regel (<code>AccessibleDataset</code>) gekoppeld worden aan Rollen en Gebruikers. Door de relatie naar een 'Dataset' is bekend welke dataset deze gebruiker toegang heeft. \"Graven\" in de triplestore zijn verbonden met \"Datasets\" waardoor een implementatie dus precies weet of een gebruiker toegang heeft tot een graaf of niet.</p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#predicate-gebaseerde-autorisatieregels","title":"Predicate-gebaseerde Autorisatieregels","text":"<p>Met de predicate regel is het mogelijk om een predicaat (een soort kenmerk) af te schermen. Een goed voorbeeld is \"koopsom\" in dit project maar ook eigenaar of Naam, Adres, Woonplaats gegevens. Je kunt met deze regel de dataset in tact laten maar ervoor zorgen dat gegevens van bepaalde predicaten afgeschermd worden. Hieronder is de regeltype afgebeeld.</p> Predicate-gebaseerde autorisatieregels <p>De regel heeft een link naar een 'Dataset' waarin de regel actief is en een link naar een 'Parameter' met een attribuut 'uri' waarin het predicaat genoemd staat. Dit kan dan een link zijn naar een predicaat in schema van een dataset. Bijvoorbeeld een link naar het kenmerk \"koopsom\" in een BRK dataset.</p>"},{"location":"autorisatie-als-linkeddata/authorisation-ontology/#horizontale-subset-regels","title":"Horizontale Subset Regels","text":"<p>Met horizontale regels kunnen we niet op schema nivo maar op dataset nivo zaken afschermen. Denk hierbij bijvoorbeeld aan volledige toegang tot alle data elementen maar alleen voor een registratieve ruimte, bijvoorbeeld een gemeente. Een ander voorbeeld is toegang tot alle pand informatie van 'eigen' panden. Hieronder is het model voor regels mbt horizontale subsets</p> Horizontale subset regels <p>Het model laat zien dat er een predicaat nodig is dat gevuld is met een waarde. Deze restrictie moet altijd waar zijn indien de resource van een gespecificeerde klasse is. Hiermee kunnen horizontale subsets gedefinieerd worden.</p>"},{"location":"autorisatie-als-linkeddata/concept/","title":"Concept 'Autorisatie als Linked Data'","text":"<p>Binnen dit project wordt een configureerbare autorisatie component voorgesteld die een beveiligd SPARQL endpoint opricht. Alle SPARQL queries kunnen gesteld worden maar op basis van de autorisatie worden alleen de resultaten terug gegeven die de gebruiker mag zien. Op deze manier kan er een netwerk van triplestores gemaakt worden die eigen autorisatiegegevens bevat.</p> . Netwerk van beveiligd triplestores <p>Applicaties kunnen de SPARQL endpoints gebruiken en dus ook meerdere SPARQL endpoints via de federatieve mogelijkheden die SPARQL biedt. Een dergelijke oplossing zou als een extra component toegevoegd kunnen worden aan bestaande triplestores zonder extra eisen aan deze triplestore te stellen. Door de instandhouding van een SPARQL endpoint voldoet een dergelijke implementatie ook aan de Linked Data architectuur. Applicaties die werken met een SPARQL endpoint zouden gewoon moeten werken. </p> Autorisatie ontologie en configuratie <p>Configuratie mogelijkheden van de autorisatie zorgt ervoor dat er 1 implementatie kan ontstaan die voor (alle) endpoints data kan afschermen. Deze configuratie biedt meerdere mogelijkheden om data af te schermen en kan \"geinstantieerd\" worden op basis van een autorisatie ontologie. Deze ontologie beschrijft data-afschermingsmogelijkheden en bevat de minimale kenmerken die nodig zijn om alle informatie hiervoor op te slaan. </p> <p>Wat er precies afgeschermd dient te worden kan geconfigureerd worden door o.a. gebruik te maken van Linked Data modellen (schemas of ontologie\u00ebn) en linked datasets (autorisatieregels beschikbaar gemaakt als linked data). Oftewel de autorisatie configuratie maakt gebruik van de Linked Data modellen die de Linked Data datasets beschrijven.</p> Autorisatie ontologie in samenhang met authenticatie en instantie data"},{"location":"autorisatie-als-linkeddata/concept/#samenvatting","title":"Samenvatting","text":"<p>Samengevat zijn de hoofduitgangspunten voor het concept Autorisatie als Linked Data zijn: </p> <ul> <li>Autorisatieregels zijn vastgelegd in Linked Data op basis van een autorisatie ontologie</li> <li>Autorisatieregels zijn beschrijven in RDF format en geinstantieerd op basis van de autorisatie   ontologie</li> <li>Een autorisatie implementatie gebruikt de autorisatie-regels in   en dat is voldoende voor een   volledige implementatie</li> <li>Een autorisatie implementatie zit achter een SPARQL endpoint zodat alle Linked Data standaarden in   tact blijven</li> </ul>"},{"location":"autorisatie-als-linkeddata/evaluatie/","title":"Evaluatie","text":""},{"location":"autorisatie-als-linkeddata/evaluatie/#vergelijking-implementaties","title":"Vergelijking implementaties","text":"<p>Beide besproken methodes hebben natuurlijk sterke en zwakke punten. In dit hoofdstuk proberen we hier een overzicht van te geven.</p>"},{"location":"autorisatie-als-linkeddata/evaluatie/#subgraph","title":"Subgraph","text":"<ul> <li> <p>Een autorisatiebeleid is eenvoudig te valideren met de subgraaf methode. Doordat er een complete   subgraaf gemaakt wordt van de toegankelijke informatie, is deze ook te exporteren en analyzeren.</p> </li> <li> <p>Bij iedere verandering van de onderliggende data, moeten de subgraven opnieuw gegenereerd worden.   Bij frequent veranderende data kan dit te veel tijd gaan kosten</p> </li> <li> <p>Om optimaal gebruik te maken van de subgraaf-methode, moeten de subgraven gecached worden. Dit kan   significante hoeveelheden RAM of schijfruimte kosten. Een alternatief is om de subgraven pas te   bepalen zodra een query wordt ge\u00ebvalueerd, maar hierdoor wordt juist het query-process significant   langzamer.</p> </li> <li> <p>Met de subgraaf-methode is het niet mogelijk om bewerkingen aan de onderliggende graaf te   ondersteunen.</p> </li> </ul>"},{"location":"autorisatie-als-linkeddata/evaluatie/#rewrite","title":"Rewrite","text":"<ul> <li> <p>Het rewriten van een query is een complex process waarbij makkelijk een fout gemaakt kan worden,   waardoor mogelijk meer gegevens beschikbaar worden gesteld dan bedoeld.</p> </li> <li> <p>De rewrite methode kan toegepast worden voor het autoriseren van bewerkingen op de onderliggende   graaf.</p> </li> </ul>"},{"location":"autorisatie-als-linkeddata/demonstrators/","title":"Demonstrators","text":"<p>Van de twee implementaties zijn demonstrators. E\u00e9n is gebaseerd op de Rewrite methode en de andere op de Subgraph methode. Deze worden in de volgende pagina's verder beschreven. Hoewel ze hier als twee losse demonstrators worden beschreven, zou het theoretisch mogelijk zijn om bepaalde delen van de demonstrators te integreren. Zo kan de front-end natuurlijk op beide implementaties werken en ook de triplestore implementaties zouden mogelijk kunnen samenwerken. </p> <ul> <li>SPARQL Rewrite methode</li> <li>Subgraph methode</li> </ul>"},{"location":"autorisatie-als-linkeddata/demonstrators/rewrite/","title":"Rewrite","text":"<p>Voor elk register is een beschermd SPARQL endpoint opgezet dat op een aparte server werkt. Om de federatieve samenwerking van de datasets goed demonstrabel te maken is er zelfs gekozen om infrastructuur van Kadaster en van het DigiLab te gebruiken om echt een heterogene, gedistribureerde infrastructuur te hebben als basis voor de demo's. Zie ook testopstelling.</p> . Netwerk van beveiligd triplestores <p>Elke triplestore is voorzien van eigen data en een afschermings kennisgraaf bestaande uit de autorisatie ontologie aangevuld met een specifieke configuratie.</p> <p>Daarmee zijn de volgende SPARQL endpoints aanwezig:</p> <ul> <li>BRK -&gt; https://brk.dst.test.cloud.kadaster.nl/</li> <li>ANBI -&gt; https://anbi-lock-unlock.apps.digilab.network/</li> <li>BRP -&gt; https://brp-lock-unlock.apps.digilab.network/</li> <li>NHR -&gt; https://nhr-lock-unlock.apps.digilab.network/</li> </ul> <p>De demonstrator staat live en is te vinden via: labs.kadaster.nl | Lock-Unlock Demonstrator</p>"},{"location":"autorisatie-als-linkeddata/demonstrators/rewrite/#triplestore-per-register","title":"Triplestore per register","text":"<p>In deze omgevingen is het mogelijk om SPARQL queries te schrijven en uit te voeren op de triplestore. Zonder 'login' worden deze queries herschreven en is daarmee afgeschermde data niet toegankelijk. Query resultaten kunnen daardoor leeg zijn. Door de URL parameter <code>Persona</code> kan er makkelijk geswitcht worden tussen persona's met verschillende rechten. Hiermee wordt het demonstreren en onderzoeken van de werking van het geheel vereenvoudigt. Het moge natuurlijk duidelijk zijn dat een echt (centraal) authenticatie systeem nodig is om dit goed af te handelen.</p> <p>Per triplestore kan er nu makkelijk van persona gewisseld worden en kan er per triplestore en per persona SPARQL queries geschreven worden die op basis van de autorisatie kennisgraaf al dan niet antwoorden geeft. Zo is bijv BRP data niet beschikbaar voor anonieme gebruikers. Gebruik je persona \"System\" dan heb je volledig toegang en kan alle data opgevraagd worden. (NB Het betreft hier fictieve data.)</p> <p>. </p>"},{"location":"autorisatie-als-linkeddata/demonstrators/rewrite/#federatief-bevragen-met-autorisatie","title":"Federatief bevragen met autorisatie","text":"<p>De persona's zijn aanwezig in alle triplestores. Daarmee kan een federatieve query geschreven worden die op basis van \u00e9\u00e9n persona resultaten teruggeeft op basis van de resultaten die elke triplestore voor deze persona beschikbaar stelt. Hiervoor kan gebruik gemaakt worden van het <code>service</code> keyword binnen SPARQL die op die manier een ander SPARQL endpoint aanspreekt. Hieronder is screenshot te zien van een SPARQL query in de Kadaster BRK triplestore werkend op de Kadaster infrastructuur die een vraag stelt aan de (fictieve) NHR dataset op de Digiab omgeving.</p> <p>. </p>"},{"location":"autorisatie-als-linkeddata/demonstrators/rewrite/#demonstrator-applicaties-bovenop-sparql-endpoints","title":"Demonstrator: applicaties bovenop SPARQL endpoints","text":"<p>Een user interface kan vervolgens gebruikmaken van deze infrastructuur met SPARQL endpoints.</p> <p>Linksbovenin de demo omgeving kan er snel gewisseld worden van persona. In het eerste screenshot zijn weinig resultaten te zien. Hier wordt op basis van de persona \"Anonieme gebruiker\" BRP gegevens opgevraagd via een SPARQL query. De query vraagt een set van (random) personen op.  Dit levert geen resultaten op en dat is volgens de autorisatie kennisgraaf correct.</p> <p>. </p> <p>De persona \"gemeente Almere\" heeft wel toegang tot de BRP maar alleen voor personen die woonachtig zijn in Almere. Dezelfde query die (random) personen opvraagt geeft nu wel resultaten en een geeft random personen terug die woonachtig zijn in Almere.</p> <p>. </p> <p>Deze persona kan ook perceel info opvragen zoals laatste koopsom en eigenaren van een perceel. Hiervoor is toegang nodig tot de BRK maar ook de BRP en de NHR voor meer info over de eigenaren. Deze info kan verder aangevuld worden met grafische perceel informatie die openbaar is.</p> <p>. </p> <p>Bovenin het screenshot wordt via een SPARQL query percelen opgevraagd met koopsommen. De query vraagt om alle percelen in het hele land en vraagt via de BRK triplestore de laatste koopsommen op. Voor persona Almere worden alleen koopsommen van Almere gevonden aangezien deze persona daartoe toegang heeft. Dit levert een percelen kaart op van Almere. </p> <p>Hieronder is een video gemaakt die bovenstaande zaken demonstreert.</p>  Your browser does not support the video tag."},{"location":"autorisatie-als-linkeddata/demonstrators/rewrite/#logging","title":"Logging","text":"<p>Aan deze demonstrator is ook logging toegevoegd. Elke query die binnenkomt wordt opgeslagen. Hierbij wordt de persona ook gelogd waardoor je percies weet wanneer welke persona welke query heeft verstuurd. Zo je bijvoorbeeld makkelijk zien wie wanneer queries heeft afgevuurd op de triplestors. Hieronder een screenshot met het aantal queries per maand per persona. Ook de individuele queries zijn zichtbaar met daarbij een tijdstempel. </p> <p>. </p> <p>Naast de originele query wordt ook de herschreven query bewaard. Hieronder een screenshot van de log informatie waarbij zowel de originele als de herschreven query op te vragen is. In het screenshot is een deel van de originele en herschreven query te zien.</p> <p>. </p>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/","title":"Subgraph","text":"<p>TO DO: </p> <ul> <li>bij de implementatie pagina of hier iets meer vertellen over de werking en architectuur hiervan.   Hoe is de demonstrator technisch opgezet? Wat gebeurt er nu precies wanneer er een query   binnenkomt?</li> <li>gebruikers kunnen dit nu nog niet (volgens mij) testen omdat de demo niet live staat. Is het een   idee om dan ook output te laten zien in de screenshots?</li> </ul> <p>Voor het Lock-Unlock project is ook een simpele demonstrator ontwikkeld voor de Subgraph implementatie. Deze toont aan dat een autorisatie-beleid afgedwongen kan worden op een SPARQL-endpoint zonder dat queries hier uitzonderlijk traag van worden. De ervaringen die hiermee zijn opgedaan zijn deels verder ge\u00efntegreerd in de demonstrator. Verdere conclusies en aanbevelingen worden besproken in het hoofdstuk evaluatie.</p> <p>Hieronder worden een aantal voorbeelden gegeven van queries die wel/niet zijn toegestaan voor specifieke gebruikers. </p>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/#algemene-bedrijfsgegevens","title":"Algemene Bedrijfsgegevens","text":"<p>De algemene bedrijfsgegevens uit het NHR zijn openbaar beschikbaar, dus ook niet-geautoriseerde gebruikers kunnen deze opvragen. Deze query zal dus resultaten geven ongeacht welke gebruiker deze uitvoert. Echter is toegang tot de UBO-gegevens beperkt zodat deze enkel toegankelijk zijn in de context van een politieonderzoek. De kolom <code>?ubo</code> zal dus leeg blijven tenzij de query wordt uitgevoerd door Ferdinand van As (een politiemedewerker).</p> <pre><code>PREFIX nhr: &lt;https://data.federatief.datastelsel.nl/lock-unlock/nhr/def/&gt;\n\nSELECT ?naam ?rechtsvorm ?kvkNr ?ubo WHERE {\n  ?inschrijving a nhr:Inschrijving.\n  OPTIONAL { ?inschrijving nhr:bedrijfsnaam ?naam. }\n  OPTIONAL { ?inschrijving nhr:rechtsvorm ?rechtsvorm. }\n  OPTIONAL { ?inschrijving nhr:kvkNummer ?kvkNr. }\n  OPTIONAL { ?inschrijving nhr:heeftUBO ?ubo. }\n} LIMIT 10\n</code></pre>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/#inwonersaantallen-per-gemeente","title":"Inwonersaantallen per Gemeente","text":"<p>Een van de doelen van Lock-Unlock is het ondersteunen van statistische queries waar de onderliggende data afgeschermd moet blijven. Denk hierbij bijvoorbeeld aan het inwonersaantal van een of meerdere gemeentes. Dit wordt met de onderstaande query gedemonstreerd. Om dit mogelijk te maken, zijn de verblijfplaatsen van personen openbaar toegankelijk. Dit lijkt in eerste instantie misschien op ongeautoriseerde datatoegang, maar gezien enkel de verblijfsplaats wordt ontsloten, is het niet mogelijk de ideniteit van een individueel persoon te achterhalen. Dit blijft natuurlijk wel een punt van aandacht wanneer een systeem als hier gedemonstreerd in productie wordt gebracht. Door overlappende beveiligingsregels kan het onbedoeld toch mogelijk worden om de identiteit van personen te achterhalen.</p> <pre><code>PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nPREFIX brp: &lt;https://data.federatief.datastelsel.nl/lock-unlock/brp/def/&gt;\n\nSELECT ?naam ?inwonersAantal WHERE {\n  ?gemeente rdfs:label ?naam.\n  {\n    SELECT ?gemeente (COUNT(*) AS ?inwonersAantal) WHERE {\n      ?persoon brp:heeftVerblijfsplaats ?gemeente.\n    } GROUP BY ?gemeente\n  }\n} ORDER BY ?naam\n</code></pre>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/#inwoners-van-zeewolde","title":"Inwoners van Zeewolde","text":"<p>Deze query lijkt heel erg op de vorige, en vraagt specifiek de inwoners van Zeewolde op. Echter vraagt deze query ook wat de namen van de inwoners zijn, er is dus een zekere mate van autorisatie nodig. In de demonstrator zijn er twee scenario's waarin de naam van een gebruiker mag worden opgehaald. Dit mag gebeuren in de context van een politieonderzoek, via onze fictieve gebruiker Ferdinand van As. Ook is het mogelijk voor ambtenaren om de inwoners van hun gemeente te bekijken. Alleen Marjolein van Groen (medewerker Gemeente Zeewolde) mag dit dus doen. Wanneer Jeroen Peerenboom (medewerker Gemeente Almere) dit zou proberen, krijgt hij geen resultaten. Zou de gemeente-URI worden aangepast naar <code>brk-gem:25</code>, dan krijgt Jeroen Peerenboom juist resultaten en heeft Marjolein van Groen geen toegang.</p> <pre><code>PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nPREFIX brk-gem: &lt;https://brk.basisregistraties.overheid.nl/brk2/id/kadastraleGemeente/&gt;\nPREFIX brp: &lt;https://data.federatief.datastelsel.nl/lock-unlock/brp/def/&gt;\n\nSELECT * WHERE {\n  ?persoon brp:heeftVerblijfsplaats brk-gem:1156;\n           rdfs:label ?naam.\n} LIMIT 10\n</code></pre>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/#ubos-van-bedrijven","title":"UBOs van Bedrijven","text":"<p>Een van de krachtigste mogelijkheden van SPARQL is het federatief bevragen van datasets. In de onderstaande query koppelen we het NHR en de BRP om de naam en geboortedatum van de UBO van een bedrijf te bepalen. Het gedeelte van de query wat uitgevoerd wordt aan de BRP-kant staat in het <code>SERVICE</code>-blok, waar het persoons-URI wordt gebruikt om de naam en geboortedatum te bepalen.</p> <pre><code>PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nPREFIX brp: &lt;https://data.federatief.datastelsel.nl/lock-unlock/brp/def/&gt;\nPREFIX nhr: &lt;https://data.federatief.datastelsel.nl/lock-unlock/nhr/def/&gt;\n\nSELECT * WHERE {\n  ?bedrijf nhr:heeftUBO ?ubo.\n  SERVICE &lt;http://localhost:8080/brp/sparql?persona=f_van_as&gt; {\n      ?ubo rdfs:label ?naam;\n           brp:geboortedatum ?geboortedatum.\n    }\n} LIMIT 10\n</code></pre>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/#autorisatie-beleid","title":"Autorisatie-beleid","text":"<p>Gezien het autorisatie-beleid ook wordt uitgedrukt als Linked Data, is het mogelijk deze te bevragen via SPARQL. Met deze query worden alle beveiligingsregels getoond en voor welke gebruikers deze van toepassing zijn.</p> <pre><code>PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nPREFIX sse: &lt;https://data.federatief.datastelsel.nl/lock-unlock/authorisation/model/def/&gt;\n\nSELECT (GROUP_CONCAT(?name; SEPARATOR=\", \") AS ?personas) ?rule ?subject ?condition WHERE {\n  ?rule a sse:AccessRule;\n        sse:subject ?subject;\n        sse:condition ?condition.\n  ?persona sse:extends*/sse:has_rule ?rule;\n           rdfs:label ?name.\n} GROUP BY ?rule ?subject ?condition\n</code></pre>"},{"location":"autorisatie-als-linkeddata/demonstrators/subgraph/#logging","title":"Logging","text":"<p>Om achteraf te inzage te hebben in wat gebruikers hebben opgevraagd, worden alle queries gelogd in de triplestore. Deze data kan ook weer als linked data worden bevraagd. De onderstaande query geeft een kleine inzage in de gelogde gegevens. In de demonstrator zijn deze gegevens openbaar toegankelijk, maar in een productie-versie is het waarschijnlijk wenselijk om ook een autorisatie-beleid af te dwingen op deze data.</p> <pre><code>PREFIX log: &lt;https://data.federatief.datastelsel.nl/lock-unlock/logging/model/def/&gt;\n\nSELECT ?timestamp ?user ?endpoint ?duration ?query WHERE {\n  ?event log:startDate ?timestamp;\n         log:by_user ?user;\n         log:endpoint ?endpoint;\n         log:processingtime ?duration;\n         log:sparqlquery ?query.\n} ORDER BY DESC(?timestamp) LIMIT 25\n</code></pre>"},{"location":"autorisatie-als-linkeddata/implementaties/","title":"Implementaties","text":"<p>De autorisatie kennisgraaf beschrijft declaratief op basis van de autorisatie ontologie wie welke rechten heeft op welke gegevens in de dataset. Deze declaratieve data zou per definitie voldoende moeten zijn om een implementatie te voorzien van de juiste gegevens zodat ook daadwerkelijk de gegevens afgeschermd kunnen worden. Hoewel dit niet verder is uitgewerkt in dit project zou je deze autorisatie kennisgraaf ook moeten kunnen gebruiken om een set van API's, die per API zeer specifiek toegang geven tot een subset van de informatie, ook af te schermen. </p> <p>Om SPARQL endpoints te beveiligen op basis van de kennisgraaf zijn er verschillende implementaties mogelijk. Hierbij is onderscheid te maken tussen een implementatie op basis van de (bron)code van een triplestore die SPARQL queries uitvoert en een implementatie die voor een bestaande triplestore gezet kan worden als losse service. </p> <p>Een implementatie op basis van broncode van een triplestore wordt al heel snel triplestore specifiek en is bijna onmogelijk voor closed source/ commerci\u00eble triplestores. In dit project is dan ook gekozen voor een aparte service die voor de data afscherming zorgt. </p> <p>Binnen dit project zijn er 2 implementatie strategie\u00ebn ge\u00efdentificeerd en verder beproefd op basis van een snelle PoC (Proof-of-Concept) implementatie: </p> <ul> <li> <p>SPARQL Rewrite: Bij deze strategie worden inkomende SPARQL queries herschreven zodat alle data   afschermingen toegevoegd worden aan de query. </p> </li> <li> <p>Subgraph: Hierbij wordt op basis van de autorisatie gegevens een subgraph gegenereerd van de   data waartoe de gebruiker toegang heeft. Vervolgens wordt de originele query op deze subset   uitgevoerd (ipv uitvoering op alle gegevens). </p> </li> </ul>"},{"location":"autorisatie-als-linkeddata/implementaties/#leeswijzer","title":"Leeswijzer","text":"<p>Deze twee concepten worden nog verder toegelicht in de volgende subhoofdstukken: </p> <ul> <li>SPARQL Rewrite methode</li> <li>Subgraph methode</li> </ul> <p>Een samenvatting van de sterke en zwakke punten van beide concepten staat in evaluatie van de twee implementaties.</p>"},{"location":"autorisatie-als-linkeddata/implementaties/rewrite/","title":"Rewrite","text":"<p>De SPARQL rewrite methode analyseert inkomende SPARQL queries en herschrijft deze alvorens ze door te sturen naar de triplestore. De gebruiker communiceert dus met een soort SPARQL endpoint proxy die de query herschrijft en doorstuurt naar de triplestore om vervolgens de resultaten weer terug te geven aan de gebruiker.</p> <p> </p> <p>Conceptueel wordt de query geanalyseerd en worden restricties toegevoegd aan de originele query: </p> <ul> <li>Indien de gebruiker geen toegang heeft tot specifieke graphs in de triplestore dan worden queries   gecontroleerd of ze geen ontoegankelijke graphs bevragen.</li> <li>Wanneer de query expliciet graphs gebruikt om data op te vragen worden deze gecontroleerd of de   gebruiker daar toegang toe heeft.</li> <li>Bevat de query geen expliciete grahs dan worden deze toegevoegd aan de query opdat alleen   informatie van graphs bevraagd worden waartoe de gebruiker toegang heeft.</li> <li>Horizontale subsets worden ge\u00efmplementeerd door resources te voorzien van extra filters die   koppelingen buiten de horizontale subset eruit filteren.</li> <li>Andere rewrites betreffen het analyseren van onwenselijk predicate (property) gebruik:<ul> <li>Indien expliciete predicaten gebruikt worden waartoe de gebruiker geen rechten heeft dan   worden deze predicaten vervangen door onbestaande predicaten zodat de query uitgevoerd kan   worden maar geen ontoegankelijke data terug kan geven. </li> <li>Indien de predicaten niet expliciet aanwezig zijn in de query worden er filters toegevoegd die   controleren of er geen afgeschermde predicaten gebruikt worden. </li> </ul> </li> </ul>"},{"location":"autorisatie-als-linkeddata/implementaties/subgraph/","title":"Subgraph","text":"<p>De subgraph methode werkt door een voorselectie te maken op basis van de regels die van toepassing zijn voor de betreffende gebruiker. Daarna wordt de query uitgevoerd op deze voorselectie, waardoor het onmogelijk wordt om ongeauthoriseerde gegevens op te vragen. Net als de rewrite methode kan dit ge\u00efmplementeerd worden als een transparant proxy endpoint.</p> <p>In theorie is het mogelijk om \u00e9\u00e9n endpoint te maken dat data uit verschillende registers combineert, echter vereist dit ook dat er een centraal autorisatiebeleid wordt geschreven voor deze gecombineerde data. Om organisatorische en beleidsmatige redenen is het verstandiger om dit niet te doen, en een endpoint per (basis)registratie te hanteren. Hierdoor houden registereigenaren de mogelijkheid zelf een autorisatiebeleid op te stellen, terwijl de features van SPARQL het mogelijk maken deze verschillende endpoints federatief te bevragen,</p> <p></p> <p>Conceptueel werkt de subgraph methode als volgt:</p> <ol> <li>De gebruiker stuurt een query en zijn autorisatiegegevens in.</li> <li>Het endpoint bepaalt welke autorisatieregels van toepassing zijn voor deze gebruiker.</li> <li>Voor iedere regel wordt bepaald tot welke gegevens deze toegang verleent.</li> <li>De toegankelijke gegevens van alle regels worden samengevoegd tot een subgraaf.</li> <li>De ingestuurde query wordt uitgevoerd op deze subgraaf.</li> <li>De resultaten van de query worden teruggestuurd naar de gebruiker.</li> </ol>"},{"location":"federatieve-bevraging/","title":"Federatieve Bevraging","text":"<p>In een federatief datastelsel wordt data beschikbaar gesteld vanuit diverse en gedistribueerde bronnen. De toegevoegde waarde volgt waneer deze bronnen in samenhang bevraagd kunnen worden. En, sterker nog, wanneer deze ge\u00efntegreerde bevraging een eenvoudigere combinatie van gegevens ondersteunt om voorheen moeilijke of ongrijpbare vragen te beantwoorden. Het opvragen van gegevens die zijn opgeslagen in gedistribueerde bronnen noemen we 'federatieve bevraging'. </p> <p>'Federatieve bevraging' duidt op twee onderdelen, namelijk de bevraging en het feit dat dat federatief plaatsvindt. We beschouwen dit vanuit een digitaal tijdperk en daarom betekent 'bevraging' een digitale of 'met computer' bevraging. Federatief geeft aan dat de informatie in verschillende bronnen is opgeslagen en dat de bevraging deze informatie individueel benadert. Er is geen centrale opslag van informatie. </p>"},{"location":"federatieve-bevraging/#application-programming-interface","title":"Application Programming Interface","text":"<p>Door de evolutie van de technologie heen wordt het bevragen van een computer systeem aangeduid met een 'Application Programming Interface', afgekort een API (uitspraak 'ee-pie-ai' of 'aapie').</p> <ul> <li>In de huidige stand van de techniek wordt met API meestal een REST API bedoeld, hoewel er vele varianten van API's bestaan. </li> <li>Er zijn echter ook andere API standaarden die gebaseerd zijn op deze internet protocollen en in opkomst zijn, zoals GraphQL en SPARQL. </li> </ul> <p>Het bestaan en de verschillen zijn relevant voor dit onderzoek en worden daarom beschreven op API's | REST vs GraphQL vs SPARQL.</p>"},{"location":"federatieve-bevraging/#linked-data","title":"Linked Data","text":"<p>Hoewel in de huidige perceptie van 'een API' een REST API wordt bedoeld, is het federatief bevragen met behulp van REST API's nog niet zo eenvoudig. Daarom is in (de opdracht voor) het Lock-Unlock project gekozen om uit te gaan van Linked Data. Dit is een technologie die het koppelen van gegevens tussen gedistribueerde bronnen ondersteunt om een betere navigatie door de gegevens heen, tussen de nodes in de gegevens, te ondersteunen. De bijbehorende query taal is SPARQL. Daarmee is federatief bevragen inherent mogelijk!</p>"},{"location":"federatieve-bevraging/#leeswijzer","title":"Leeswijzer","text":"<p>In dit hoofdstuk wordt eerst beschreven hoe de verschillende API's zich tot elkaar verhouden en waarom we ons beperkt hebben tot de scope van Linked Data. Vervolgens beschrijven we hoe het informatiemodel in elkaar zit en wat de relatie is tot de informatiekundige kern. Ook wordt toegelicht hoe de testdata is gegenereerd. Zowel het informatiemodel als de testdata is randvoorwaardelijk voor een goede testcasus en testopstelling. We sluiten af met conclusies rondom federatieve bevraging.</p> <ul> <li>REST vs GraphQL vs SPARQL</li> <li>Waarom Linked Data?</li> <li>Informatiekundigekern</li> <li>Informatiemodel</li> <li>Testopstelling</li> <li>Demonstrator</li> <li>Conclusies</li> </ul>"},{"location":"federatieve-bevraging/apis/","title":"REST vs GraphQL vs SPARQL","text":"<p>In de huidige stand van de techniek wordt met API meestal een REST API bedoeld, hoewel er vele varianten van API's bestaan. Een REST API staat voor een API die gebruik maakt van internet protocollen als TCP/IP en HTTP voor het bevragen. Er zijn echter ook andere API standaarden die gebaseerd zijn op deze internet protocollen en in opkomst zijn, zoals GraphQL en SPARQL. Het bestaan en de verschillen zijn relevant voor dit onderzoek. Hieronder worden deze verschillen toegelicht.</p>"},{"location":"federatieve-bevraging/apis/#rest","title":"REST","text":"<p>REST staat voor Representational State Transfer waarmee geduid wordt op een Resource. Met een REST API kan een Resource bevraagd en (eventueel) ook gemuteerd worden en daarbij wordt (dus) gebruik gemaakt van de HTTP methods als GET, PUT en POST. De data wordt in JSON formaat (JavaScript Object Notation) over HTTP uitgewisseld (transport) tussen een client en de server. </p> <p>REST API\u2019s/RESTful-webservices zijn opgezet om ge\u00efsoleerd en enkelvoudige informatie beschikbaar te stellen. Elke API heeft \u00e9\u00e9n specifieke input en output. Relaties tussen objecten zijn in de (output) JSON als URL opgenomen welke direct gebruikt kan worden om dan een gerelateerd object op te vragen. Dit maakt dat het federatief bevragen van data met behulp van REST API's nog niet zo eenvoudig is. Daarvoor dient een client, de software voor uitvoeren van de bevraging, slim en flexibel te zijn. Tot slot dienen de REST API's te voldoen aan de Restful standaarden, welke de facto standaarden zijn en helaas slechts weinig echt ondersteund worden.</p> Pros Cons <ul><li>Zeer gangbaar</li><li>Binare autorisatie is gestandardiseerd</li></ul> <ul><li>Silo gedachte</li><li>API orkestratie nodig voor samenhang</li><li>Slechte schema definities onsluiting</li><li>Geen vrije (schema loze) query mogelijkheden</li></ul>"},{"location":"federatieve-bevraging/apis/#graphql","title":"GraphQL","text":"<p>GraphQL is een query taal (bevragingstaal) voor API's. Het is een nieuwe techniek welke sterk lijkt op een REST API wat betreft het resultaat, namelijk data in JSON formaat. Echter waar REST een reeks endpoints gebruikt per object, gebruikt GraphQL een enkel endpoint/gateway. Wat er opgevraagd kan worden en wat er geretourneerd wordt, is gepubliceerd in een GraphQL\u00a0schema. Daarbij is het mogelijk om in het bevragen een selectie te maken van welke data je precies nodig hebt. Het is ook mogelijk om meerdere objecten te combineren, zolang dat volgens het schema beschikbaar is. Met een GraphQL gateway is het mogelijk om meerdere schema's en endpoints te bevragen, wat in de richting van een federatieve bevraging komt. GraphQL is daarmee flexibeler dan REST API\u2019s en maakt het mogelijk om integraal informatie beschikbaar te stellen.</p> Pros Cons <ul><li>Minder silo gedachte</li><li>Mogelijkheden tot samenhang</li><li>Verfijnde autorisatie mogelijk</li><li>Gangbaarde/bekender dan SPARQL</li></ul> <ul><li>Matige schema definities</li><li>Geen vrije (schema loze) query mogelijkheden</li><li>Minder gangbaar dan REST</li></ul>"},{"location":"federatieve-bevraging/apis/#sparql","title":"SPARQL","text":"<p>SPARQL, uitspraak 'sparkle', is een standaard query taal en protocol voor Linked (Open) Data op het web en voor RDF triple stores. SPARQL staat voor 'SPARQL Protocol and RDF Query Language' en biedt gebruikers de mogelijkheid om informatie op te vragen van databases of van elke resource die kan worden uitgedrukt in RDF (zie Linked Data). Ook SPARQL is gebaseerd op HTTP net zoals REST en GraphQL en met deze zeer krachtige query taal is het inherent mogelijk om \u00e9\u00e9n of meerdere endpoints / API\u2019s in samenhang te bevragen. SPARQL is volledig gebaseerd op Linked Data en de mogelijkheden daarvan.</p> Pros Cons <ul><li>Geen silo gedachtes</li><li>Hoge samenhang</li><li>Zeer goede schema definities ontsluiting</li><li>Schemaloze query mogelijkheden</li></ul> <ul><li>Verfijnde autorisatie mogelijkheden moeten nog ontwikkeld worden</li><li>Minder gangbare oplossing onder developers</li></ul> <p>Hieronder worden de verschillen tussen de verschillende interfaces gevisualiseerd.</p> Vergelijking van toegangs mogelijkhede over de drie verschillende application interfaces"},{"location":"federatieve-bevraging/apis/#vergelijking-apis","title":"Vergelijking API's","text":"<p>GraphQL is een mix tussen REST API\u2019s en SPARQL. Het biedt vergelijkbare functionaliteiten als REST API\u2019s maar met meer mogelijkheden. Waar SPARQL volledig is gebaseerd op Linked Data, voldoet GraphQL slechts ten dele aan (de) Linked Data (principes). Bijvoorbeeld, in een SPARQL endpoint/API kunnen meerdere schema\u2019s gecombineerd worden, terwijl bij GraphQL slecht \u00e9\u00e9n expliciet schema van toepassing is.</p> Vergelijking van vraagkracht van APIs voor federatief bevraging"},{"location":"federatieve-bevraging/conclusies/","title":"Conclusies en aanbevelingen","text":""},{"location":"federatieve-bevraging/conclusies/#conclusies","title":"Conclusies","text":"<p>De volgende conclusies kunnen getrokken worden:</p> <ul> <li>Het is goed mogelijk om een testopstelling te cre\u00ebren met testdata in verschillende servers op   basis van open source triple stores</li> <li>Het is eenvoudig om testdata en versimpelde schema's in Linked Data te maken voor elke silo/register</li> <li>Met Linked Data kan data uit verschillende registers makkelijk direct gekoppeld worden</li> <li>Via SPARQL queries kun je data uit de SPARQL endpoints halen</li> <li>Het is makkelijk om SPARQL queries te schrijven die gecombineerd meerdere registers bevragen   (Federatieve bevraging)</li> <li>Linked Data is van nature geschikt voor het federatief bevragen van data. </li> <li>Het is eenvoudig om applicaties te ontwikkelen die gebruik maken van de verschillende SPARQL   endpoints</li> <li>Impliciet zijn registers koppelbaar. Het  lijkt verstandig om deze koppelingen expliciet te   formaliseren opdat er gebouwd en vertrouwd kan worden op deze relaties. Denk hierbij aan een   Informatiekundige kern in de vorm van een Linked Data Upperontologie.</li> </ul>"},{"location":"federatieve-bevraging/conclusies/#aanbevelingen","title":"Aanbevelingen","text":"<ul> <li>Indien federatief bevragen gewenst is dan is het zeer verstanding om Linked Data te beschouwen als   techniek om dit mogelijk te maken.</li> <li>Om de relaties tussen de registers te engineren kan een upperontologie handig zijn. Hierin kunnen   datastructuren en relaties geformaliseerd worden die indien geadopteerd worden door de register   voor een goede koppeling kunnen zorgen. Deze upperontologie heeft meer onderzoek nodig over   koppelvelden en hoe deze gevonden kunnen worden inclusief reproduceerbaarheid van de data. Denk   bij het laatste aan afspraken hoe om te gaan met veranderingen in de data.</li> <li>Meer onderzoek is nodig mbt de minimaal benodigde infrastructuur voor de overheid om Linked Data   te publiceren inclusief beheer en verantwoordelijkheidsvraagstukken. Welke infrastructuur is   nodig om tot een Linked Data versie van FDS te komen?</li> </ul>"},{"location":"federatieve-bevraging/demonstrator/","title":"Demonstrator","text":"<p>Deze demonstrator is gepubliceerd op labs.kadaster.nl.</p> <p>Genoeg beschreven over federatieve bevragingen. Nu willen we dat wel eens zien! Daarvoor maken we gebruik van SPARQL (zie ook API's en Linked Data). Deze query taal kent het begrip <code>service</code> om aan te geven dat informatie van een ander endpoint opgehaald dient te worden. Daarmee geeft de gebruiker het eerste endpoint, het endpoint dat direct bevraagd wordt, de opdracht om andere endpoints te betrekken bij de uitvoering van de query. Uitgaande van de testopstelling#deployment ziet een federatieve bevraging er dan schematisch als volgt uit:</p> <p></p> <p>Voordat we een voorbeeld zullen geven van een federatieve bevragingen duiken we eerst in de losse silo's. </p>"},{"location":"federatieve-bevraging/demonstrator/#brp-silo","title":"BRP Silo","text":"<p>Fictieve data is gemaakt voor BRP gegevens. Meer dan 100.000 personen zijn aangemaakt met kenmerken zoals naam, achternaam, geslacht &amp; geboorteplaats. Hieronder is een dashboard te zien waarin alle personen opgevraagd worden en waarbij ook een aantal doorsnedes worden getoond. Al deze vragen zijn gewone SPARQL queries op het BRP SPARQL-endpoint.</p> <p></p>"},{"location":"federatieve-bevraging/demonstrator/#nhr-silo","title":"NHR Silo","text":"<p>Fictieve data is gemaakt voor NHR gegevens. Meer dan 25.000 inschrijvingen zijn gegenereerd met een KvK nummer, rechtsvorm, naam, stichtingsjaar, etc. Hieronder is een dashboard te zien waarin alle inschrijvingen in een tabel worden getoond en ook enkele grafieken met statistiche gegevens over deze fictieve dataset.</p> <p></p>"},{"location":"federatieve-bevraging/demonstrator/#anbi-silo","title":"ANBI Silo","text":"<p>Fictieve data is gemaakt voor ANBI gegevens. Meer dan 4.000 stichtingen zijn aangemaakt met basale informatie zoals een fiscaal nummer en een vestigingsplaats. Hieronder een screenshot met daarin een set van ANBI gegevens in tabelvorm en twee grafieken.</p> <p></p>"},{"location":"federatieve-bevraging/demonstrator/#brk-silo","title":"BRK Silo","text":"<p>De BRK data bestaat uit een open en een gesloten gedeelte. In het open gedeelte staat informatie over de percelen zoals de geometrie. Deze is voor deze demo aanwezig op de BRK silo. Tzt kan voor deze data ook het (echte) IMX-Geo SPARQL endpoint gebruikt worden. Voor dit project worden de percelen in Almere en Zeewolde gebruikt. Hieronder een screenshot met daarin de percelen op de kaart. Deze informatie is afkomstig van IMX-Geo.</p> <p></p> <p>In het gesloten gedeelte van de BRK staat de fictieve eigendomsinformatie. Hierin staat wie de eigenaar/eigenaren is/zijn van een perceel. Voor de percelen van Zeewolde en Almere is hiervoor dan ook data gegenereerd. Dit resulteert in een dataset met meer dan 100k personen (natuurlijke personen en rechtspersonen). Ook staan hierin de koopsommen van de percelen. Hieronder een screenshot van de eigendom gegevens.</p> <p></p>"},{"location":"federatieve-bevraging/demonstrator/#federatieve-bevraging","title":"Federatieve bevraging","text":"<p>Door deze silo's te combineren en integraal te bevragen kunnen er vragen beantwoord worden zoals: wat is de geboorteplaats van de eigenaar van perceel X of is het perceel in eigendom van een ANBI. Hieronder is een voorbeeld waarbij alle koopsommen zichtbaar zijn van percelen uit de BRK en waarbij eigendomsinformatie aanwezig is van een geselecteerd perceel. </p> <p> </p> <p>In elke widget (tabel of grafiek) staat bij welke bronnen geraadpleegd zijn. Zo wordt er NHR informatie opgezocht in de NHR zoals stichtingsjaar en RSIN nummer voor NHR inschrijvingen die eigenaar zijn van het geselecteerde perceel. Ook de BRP wordt geraadpleegd om extra persoonsinformatie op te halen van een Perceels eigenaar. </p> <p></p> <p>Deze demonstrator is gepubliceerd op labs.kadaster.nl.</p>"},{"location":"federatieve-bevraging/informatiekundigekern/","title":"Informatiekundige Kern","text":"<p>Een kernprincipe bij de ontwikkeling van het federatief datastelsel is het concept van een informatiekundige kern. Deze informatiekundige kern ondersteunt het koppelen van eerder verspreide basisregistraties via een set vooraf gedefinieerde relaties (zie Stelsel van Basisregistraties). Dit hoofdstuk beschrijft wat ervoor nodig is om verschillende, onafhankelijke registers met elkaar te koppelen en en hoe dat binnen dit project concreet werd ge\u00efmplementeerd. Binnen dit project wordt uitgegaan van een federatief datastelsel op basis van Linked Data. </p>"},{"location":"federatieve-bevraging/informatiekundigekern/#onafhankelijke-registers","title":"Onafhankelijke Registers","text":"<p>De basisregistraties (e.g. BRK, BAG, BRP en NHR) zijn relatief onafhankelijk van elkaar ontwikkeld door verschillende organisaties, techniek en modellen. Zo beheert Kadaster bijvoorbeeld de BRK en de KvK het NHR. Ook de modellering en standardisatie van de gegevens kan verschillen. Zo zijn, bijvoorbeeld, de NEN3610 en Geonovum's IM-modellen de basis voor de datasets van Kadaster terwijl deze standaarden minder van belang zijn bij andere registers. Door de onafhankelijke ontwikkeling van registers ontstaan zogenaamde data silo\u2019s. Abstract wordt deze situatie als volgt gevisualiseerd. </p> Registraties als losstaande silo's"},{"location":"federatieve-bevraging/informatiekundigekern/#registers-als-linked-data","title":"Registers als Linked Data","text":"<p>De bron van alle registers is vooralsnog geen Linked Data. Een ontwikkeling naar Linked Data toe zou kunnen door de bestaande situatie uit te breiden met een publicatie van de gegevens in Linked Data. Er zijn steeds meer implementaties en standaarden aanwezig om Linked Data te genereren vanuit een andere type bron zoals bijvoorbeeld een SQL database. Denk hierbij bijvoorbeeld aan RML of R2RML. Ook maakt JSON-LD de stap naar Linked Data wat makkelijker voor implementaties die werken met JSON denk bijvoorbeeld aan JSON api's. Het volgende diagram toont de creatie van Linked Data 'silo's voor elk van de oorspronkelijke gegevensbronnen.</p> Registraties beschikbaar gemaakt als Linked Data <p>4 Star Linked Data: Omdat deze informatie nu als Linked Data wordt gepubliceerd met behulp van de verschillende open Linked Data-standaarden, kan deze informatie worden beoordeeld volgens het 5-sterrenmodel. Op dit moment worden de individuele Linked Data-silo's beoordeeld als 4-sterren Linked Data. De volgende stappen in deze sectie verbeteren deze beoordeling.</p> <p>Door middel van een SPARQL endpoint kan er nu een federatieve query gemaakt worden die gegevens uit meerder endpoints raadpleegt. Om dit te kunnen doen, moet de gebruiker echter begrijpen waar de overlappingen bestaan tussen verschillende datasets, d.w.z. hoe de informatie die zich in deze zich bevindt moet worden verbonden om de informatie over verschillende endpoints te kunnen opvragen.</p>"},{"location":"federatieve-bevraging/informatiekundigekern/#formele-verbinding-van-registers","title":"Formele Verbinding van Registers","text":"<p>Om precies te weten wat de data betekent en waar evt een overlap te vinden is die in meerdere registers aanwezig is, kan de data verrijkt worden met een context. Elk data element (of stuk instantie data) kan gekoppeld worden aan een linked data klasse (bv. een <code>owl:Class</code>) die o.a beschrijvingen, labels (in meerdere talen), en overige informatie kan bevatten. Door deze extra context is de data beter te begrijpen en makkelijker te bevragen door de gebruikers. </p> Beschikbaar maken van een context <p>De toevoeging van een dergelijke context verschijnt in de vorm van of een schema dat is gedefinieerd met behulp van Linked Data-standaarden of in de vorm van een geformaliseerde ontologie. Dit laatste is alleen beschikbaar als de context formele logica omvat (bijvoorbeeld het gebruik van axioma's) die inferencing ondersteunt.</p> <p>Met de toevoeging van een schema of ontologie aan de instantiegegevens kan de overlap tussen verschillende registers voor gebruikers gemakkelijker te identificeren zijn. Dit kan gebaseerd zijn op het gebruik van dezelfde klassen of attributen in meerdere registers (bijvoorbeeld de aanwezigheid van BSN-nummers in zowel de BRK als de BRP) of op de mogelijkheid om geospatiale overlap tussen objecten uit te voeren. Dit laatste is vaak nuttig bij het identificeren van de relatie tussen georuimtelijke registers zoals de BAG en de BRK, waar de overlap tussen gebouwen en percelen voor veel gebruikers nuttig is.</p> <p>Omdat deze overlappingen of schijnbaar gedeelde kenmerken nog niet als zodanig tussen registers zijn geformaliseerd, moeten deze door gebruikers worden ge\u00efdentificeerd en onderzocht voordat een federatieve query kan worden uitgevoerd. De relatie met andere registers is dus nog niet optimaal in deze situatie. </p> <p>Idealiter zorg je voor formele koppelelementen die de registers adopteren en onderhouden. De geformaliseerde koppelelementen komen in twee vormen voor, of in de vorm van een upperontologie, of in de vorm van gematerialiseerde relaties tussen instantiegegevens over verschillende registers heen. Beide worden hieronder beschreven en sluit elkaar niet uit.</p> <p>5 Star Linked Data: Wanneer \u00e9\u00e9n of beide van deze opties tussen basisregistraties worden ge\u00efntroduceerd, kunnen deze registers nu worden beoordeeld als 5-sterren linked data.</p>"},{"location":"federatieve-bevraging/informatiekundigekern/#optie-1-upperontologie","title":"Optie 1: Upperontologie","text":"<p>Een upperontologie, of wellicht in FDS termen een Linked Data versie van een 'informatiekundige kern', definieert klassen en/of attributen die worden gedeeld tussen verschillende registers. Een upperontologie zou bijvoorbeeld het attribuut BSN-nummer kunnen defini\u00ebren als het identificatienummer van een persoon en zowel de BRP als de BRK kunnen dit attribuut gebruiken bij het publiceren van identificatiegegevens gerelateerd aan personen. Deze gedeelde kenmerken kunnen worden aangeduid als sleutelvelden. </p> Upperontologie beschikbaar gemaakt voor een bepaald set registers <p>Een dergelijke upperontologie kan logisch worden gedefinieerd op basis van ge\u00efdentificeerde sleutelvelden maar om dit op een nuttige manier te kunnen implementeren voor gebruikers moeten de registers deze upperontologie en de bijbehorende afspraken ook adopteren. Door in beide registers hetzelfde attribuut te gebruiken dat in de upperontologie is gedefinieerd, kunnen gebruikers van deze gegevens er zeker van zijn dat het BSN-nummer in beide registers op dezelfde manier wordt gebruikt. Wanneer een identifier in het ene register overeenkomt met een identifier in een ander register dan weet je zeker dat deze verwijst naar dezelfde persoon in de BRP.</p> Linked data registers gecombineerd door het gebruik van een upperontologie <p>Hiermee wordt het makkelijker om data uit \u00e9\u00e9n register te combineren met data uit een ander register. Bij het schrijven van een federatieve query kan dit BSN-nummer dus worden gebruikt om informatie over de percelen van een bepaalde persoon op te halen bij de BRK en de persoonsgegevens van deze persoon (bijvoorbeeld volledige naam, geboortedatum en huwelijksstatus) uit de BRP te halen. </p>"},{"location":"federatieve-bevraging/informatiekundigekern/#optie-2-gematerialiseerde-relaties","title":"Optie 2: Gematerialiseerde Relaties","text":"<p>Hoewel deze mogelijkheid er is door het uitvogelen van relaties tussen sleutelvelden uit de upperontologie zou het ook mogelijk zijn om extra relaties te kunnen afleiden en deze 'materialiseren'. Oftewel extra relaties kunnen (evt virtueel) toegevoegd worden. Deze materialisatie van relaties wordt niet gedefinieerd door de upperontologie maar tussen de instancegegevens in de registers zelf.</p> Materialiseren van extra relaties tussen registers <p>Het materialiseren van relaties tussen registers is in verschillende scenario's logisch. Een voorbeeld is het formaliseren van relaties tussen registers op basis van hun ruimtelijke relatie met elkaar. Bijvoorbeeld de relatie tussen een <code>bag:Verblijfsobject</code> en de <code>brk:Perceel</code> waaraan dit object gerelateerd is op basis van zijn ruimtelijke nabijheid (overlappende geometrie bijvoorbeeld). In de praktijk kan de gebruiker door de introductie van deze geformaliseerde relatie zien welke <code>bag:Verblijfsobjecten</code> bij een bepaald <code>brk:Perceel</code> horen, maar bij uitbreiding ook welke adressen (<code>bag:Nummeraanduiding</code>) bij het perceel horen.</p> <p>Een tweede voorbeeld is de materialisatie van relaties tussen instantiegegevens op basis van attributen vastgelegd in de upperontologie. Stel Kadaster legt eigendom van percelen van rechtspersonen vast met o.a. een <code>kadaster:KVKnummer</code>. Indien dit <code>kadaster:KVKnummer</code> als kenmerk gelijk gesteld wordt aan een KVKnummer in de upperontologie die vervolgens ook gelijkgesteld is aan <code>NHR:InschrijvingsNummer</code> dan zou je vanuit kadaster Percelen een directe relatie kunnen leggen naar een NHR inschrijving. Hiermee ontstaan er dus directe relaties tussen de registers. </p> <p>De aanwezigheid van directe relaties tussen de registers maakt het nog makkelijker om federatieve bevragingen te doen.  Integrale bevragingen zijn hierbij mogelijk maar ook bevragingen mbt consistentie zijn hierbij zeer makkelijk. Denk bijvoorbeeld aan de vraag welke BAG-Panden zijn onbekend bij Kadaster vanuit de NHR, Of vanuit de BRK, welke BRP personen zijn (on)bekend bij de BRP. Het schrijven van een dergelijke query is zeer eenvoudig. De uitvoering ervan zal natuurlijk qua performance wel het nodige vereisen. Linked data technologie\u00ebn maken de introductie van deze directe relaties tussen instantiegegevens eenvoudig en illustreren een duidelijk voordeel van het gebruik van deze technologie ter ondersteuning van federatieve bevragingen.</p>"},{"location":"federatieve-bevraging/informatiekundigekern/#ontwerp-van-de-informatiekundige-kern","title":"Ontwerp van de Informatiekundige Kern","text":"<p>Het ontwerp van de informatiekundige kern zou zowel de introductie van een upperontologie moeten omvatten als de introductie van gematerialiseerde relaties tussen basisregistraties waar logische relaties bestaan. Er moeten afspraken worden gemaakt tussen de beheerders van de basisregistraties bij het ontwerpen van een dergelijke hogere ontologie en bij het onderhouden van eventuele gematerialiseerde relaties tussen de basisregistraties. Door ervoor te zorgen dat deze afspraken worden nageleefd, kan de gebruikerstoegankelijkheid en herbruikbaarheid van de basisregistraties als datastelsel worden gewaarborgd.</p> <p>In de volgende secties worden de ingredi\u00ebnten ge\u00efntroduceerd voor de testopstelling die is gedefinieerd binnen het Lock Unlock-project. Hierbij wordt een kleiner, fictief systeem van basisregistraties  gecre\u00eberd, een upperontologie wordt gedefinieerd en federatieve bevragingen worden ondersteund. In de volgende sectie worden de ontwerpkeuzes besproken die zijn gemaakt bij het defini\u00ebren van zo een upperontologie.</p>"},{"location":"federatieve-bevraging/informatiemodel/","title":"Informatiemodel","text":"<p>Versimpelde testdata van een federatief datastelsel is ontwikkeld op basis van Linked Data en de Linked Data gedachte. Hiermee is het mogelijk om een realistische situatie na te kunnen bootsen waarin informatie afgeschermd dient te worden. Aangezien het heel handig is om data in een context te plaatsen (denk aan data schema's) is er binnen dit project een set van schema's ontwikkeld die de registers nabootsen (versimpeld en fictief) en natuurlijk een bijbehorende dataset. Deze pagina beschrijft het maken van de schema's die relevant zijn voor dit project en de volgende sectie beschrijft het maken van gerelateerde dataset. </p>"},{"location":"federatieve-bevraging/informatiemodel/#vereenvoudigd-conceptueel-model","title":"Vereenvoudigd Conceptueel Model","text":"<p>Om een federatieve bevraging te kunnen laten zien, is een testopstelling nodig. De eerste stap hiervoor is het maken van een conceptueel model om de benodigde gegevens voor ons doel te modelleren. Om een logisch begin te maken, hebben we daarvoor gekozen voor een situatie 'dicht bij huis'. Bij het Kadaster: De Basisregistratie Kadaster, afgekort de BRK. </p> <p>Dit begint met het opnemen van percelen als object binnen een conceptueel model en vervolgens is het eigendom vastgesteld via <code>Tenaamstellingen</code> aan objecten personen. Met personen worden <code>Rechtspersonen</code> bedoeld, wat een echt of 'natuurlijk' persoon kan zijn, maar ook een bedrijf. De juridische term is <code>Natuurlijk Persoon</code> voor echte mensen, welke geregistreerd zijn in de Basisregistratie Personen, afgekort met de BRP. Bedrijven zijn juridisch <code>Niet Natuurlijke Personen</code> en deze zijn geregistreerd in het Nationaal Handelsregister, afgekort met NHR. Om de casus nog wat breder te maken hebben we ook nog het ANBI register toegevoegd; het register van de Belastingdienst waarin goede doelen staan die aangemerkt zijn als Algemeen Nut Beogende Instellingen.</p> Informatie Model IMXGeo als Linked Data <p>Het vereenvoudigd conceptueel model zoals getoond in bovenstaande afbeelding is verder uitgewerkt in Linked Data als een (upper)ontologie voor een Lock-Unlock Informatiemodel gebaseerd op losstaande schema's. Om de schema's en (upper)ontologie te modelleren is er gebruik gemaakt van de RDF/RDFS/OWL en SHACL standaarden. </p>"},{"location":"federatieve-bevraging/informatiemodel/#losstaande-schemas-per-silo","title":"Losstaande schema's per silo","text":"<p>Voor elke silo is een schema gemaakt. Het betreft hier een (over)versimpeld schema dat grofweg de kern van het register bevat met als doel R&amp;D voor de dit project te ondersteunen en tevens voor demonstratie mogelijkheden. Het schema voor elke silo heeft een eigen namespace en is relatief onafhankelijk gemodelleerd. Zo is voor Kadaster de NEN3610 een belangrijke upperontologie terwijl dit wellicht voor de BRP niet zo hoeft te zijn. Op deze manier onstaat er een situatie dat elk register een eigen ontologie heeft op basis van eigen upperontologie\u00ebn.</p>"},{"location":"federatieve-bevraging/informatiemodel/#imx-geo-schema","title":"IMX-Geo Schema","text":"<p>Een openbare basis dataset is IMX-Geo. Deze is aanwezig als Linked Data en bevat data van gebouwen en percelen liggende in registratieve ruimtes. Bijna alle gegevens zijn openbaar. De 'laatste koopsom' is wellicht een uitzondering hierop. Het deel van het informatiemodel dat nodig is voor Lock Unlock wordt gevisualiseerd in de volgende afbeelding en is hier te vinden:</p> Informatie Model IMXGeo als Linked Data <p>IMX-Geo is vanuit Kadaster beschikbaargesteld in Linked Data en is grofweg voor het 'Kadaster gedeelte' helemaal compleet aanwezig. Deze dataset is gebruikt in dit project.</p>"},{"location":"federatieve-bevraging/informatiemodel/#brk-gesloten-deel-schema","title":"BRK (Gesloten Deel) Schema","text":"<p>Een versimpeld model van de BRK is ontwikkeld in Linked data voor dit project. Hieronder is een screenshot van het model zichtbaar en het schema is ook hier te vinden.</p> BRK Schema als Linked Data"},{"location":"federatieve-bevraging/informatiemodel/#nhr-schema","title":"NHR Schema","text":"<p>Een versimpeld model van de NHR is gemaakt. Inschrijvingen bevatten wat basis gegevens en zijn gekoppeld aan de openbare Registratieve Ruimtes. Hieronder is een diagram van het NHR schema te zien en deze is hier live te vinden.</p> NHR Schema als Linked Data"},{"location":"federatieve-bevraging/informatiemodel/#brp-schema","title":"BRP Schema","text":"<p>Een versimpelde versie van het BRP register is gemodelleerd. Hieronder is een diagram van het BRP schema te zien en deze is hier live te vinden. </p> BRP Schema als Linked Data"},{"location":"federatieve-bevraging/informatiemodel/#anbi-schema","title":"ANBI Schema","text":"<p>Hieronder is een diagram van het ANBI schema te zien. Deze sluit niet precies op het ANBI informatie model zelf aan en is alleen voor dit project gemodelleerd. Een live versie van de schema is ook hier te vinden.</p> BRP Schema als Linked Data"},{"location":"federatieve-bevraging/informatiemodel/#samenhang-creeren","title":"Samenhang cre\u00ebren","text":"<p>De schemas en de data van de schemas zijn als silo's opgezet. Elk register publiceert zijn data en de bijbehorende context (schemas) op een eigen triplestore. </p> <p>NB: De bovenstaanden schemas worden hier niet gedefinieerd als ontologie\u00ebn omdat ze geen axioma's of geformaliseerde inferentie regels bevatten. Met de introductie van <code>owl:sameAs</code> vanaf nu, kunnen we nu inferentie doen en nu wordt het informatie model een ontologie. Dit komt omdat deze relatie aangeeft dat er enige conceptuele gelijkenis bestaat tussen individuen en dat informatie kan worden afgeleid op basis van de aanwezigheid van deze relaties. </p> <p>Om de verschillende schema's met elkaar te verbinden, wordt een upperontologie gedefinieerd die twee relaties omvat tussen klassen die in de schema's zijn gedefinieerd, <code>owl:sameAs</code> en een <code>ik:heeftUBO</code> relatie. In beide gevallen worden deze relaties gedefinieerd als onderdeel van een hogere ontologie en gematerialiseerd in de data zelf om instanties met elkaar te verbinden. </p>"},{"location":"federatieve-bevraging/informatiemodel/#owlsameas","title":"<code>owl:sameAs</code>","text":"<p>Door middel van <code>owl:sameAs</code> relaties kunnen individuals in Linked Data gelijk verklaard worden over verschillende silo's heen. Oftewel een linked data resource (element) dat leeft in \u00e9\u00e9n register wordt gelijk verklaard aan een andere resource dat zich bevindt in een ander register (zie hieronder).</p> Netwerk van schemas <p>De bijbehorende inference is dat alle gegevens van de 2 gelijk gestelde resources gekopieerd mag worden. Stel individual 'A' is gelijk (owl:sameAs) aan individual 'B' dan kunnen alle relaties en kenmerken gekopieerd worden van 'A' naar 'B' en andersom. Hierdoor ontstaan netwerken van linked data over de registers heen en kan er daadwerkelijk \"doorgebrowsed\" worden van het ene register naar het andere. Ook SPARQL queries kunnen hier makkelijk gebruik van maken om zoekopdrachten over meerdere registers te uit te voeren. Ook in onze testopstelling maken we gebruik van <code>owl:sameAs</code> om relaties te leggen naar andere registers zonder volledig afhankelijk te worden van deze registers. Dit is natuurlijk een manier om de relaties te leggen. Er zijn meerdere manieren om registerdata te koppelen via Linked Data.</p> <p>Voorbeeld: BRK naar BRP en NHR</p> <p>'Personen' uit de BRK kunnen gelijk verklaard worden met 'geregistreerde personen' uit de BRK of 'Inschrijvingen' uit de NHR (Zie diagram hieronder).</p> Relatie tussen BRK, BRP en NHR registers <p>Een <code>owl:sameAs</code> relatie kan gelegd worden wanneer je weet dat deze 2 individuals ook daadwerkelijk gelijk zijn (refereert naar dezelfde persoon in de werkelijkheid). Vanuit Kadaster zal er waarschijnlijk akte informatie gebruikt worden zoals voornamen, achternaam, geboortedatum, geboortestad, etc om de juiste persoon in de BRP te vinden. De eigen adminstratie (BRK:Persoon) wordt dan gelijk verklaard met de gevonden (BRP:GeregistreerdPersoon). Ook voor relaties met de NHR werkt dit ongeveer hetzelfde. Akte informatie zal gebruikt worden om de juiste Inschrijving te vinden in de NHR om vervolgens weer de owl:sameAs relatie te leggen.</p> <p>Voorbeeld: ANBI naar NHR De ANBI dataset kan direct gekoppeld worden aan NHR Inschrijvingen (zie diagram hieronder).</p> Relatie tussen ANBI en NHR registers"},{"location":"federatieve-bevraging/informatiemodel/#ikheeftubo","title":"<code>ik:heeftUBO</code>","text":"<p>De <code>ik:heeftUBO</code> relatie is specifiek gedefinieerd om de relatie tussen individuen in de NHR en de BRP te ondersteunen. In dit geval was het niet voldoende om een <code>owl:sameAs</code> relatie in te voeren, omdat er geen gedeelde identifier (zoals een BSN-nummer) aanwezig was en er dus op basis van deze nieuwe relatie twee verschillende identificerende attributen aan elkaar gerelateerd moesten worden. In de context van dit project werden geen axioma's gedefinieerd, dus er is geen gevolgtrekking mogelijk op basis van de aanwezigheid van deze relatie, maar dit zou indien nodig in toekomstige iteraties van het model kunnen worden ge\u00efntroduceerd.</p> <p>Voorbeeld: NHR naar BRP</p> <p>Net zoals de BRK linkt naar personen in de BRP kan ook de NHR direct verbonden worden met BRP (Geregistreerde)Personen (zie diagram hieronder).</p> Relatie tussen NHR en BRP registers"},{"location":"federatieve-bevraging/informatiemodel/#het-informatiemodel-voor-lock-unlock","title":"H\u00e9t Informatiemodel voor Lock-Unlock","text":"<p>Door de <code>owl:sameAs</code> relatie (en bijbehorende inferentie) en <code>ik:heeftUBO</code> relatie ontstaat er een netwerk van samenhangende schema's. Dit kan natuurlijk als \u00e9\u00e9n schema gepresenteerd worden. </p> <p>Hieronder een screenshot van de visualisatie direct uit de data van de schema's. Deze visualisatie is ook live te bekijken via deze link.</p> H\u00e8t Informatie Model voor Lock-Unlock <p>In dit samengesteld model zijn verschillende kleuren gebruikt om de individuele silo's (weer) te onderscheiden.</p>"},{"location":"federatieve-bevraging/linkeddata/","title":"Linked Data","text":"<p>In de technologische en digitale evolutie is data steeds belangrijker geworden. Waar de eerste automatisering gericht was op het automatiseren van processen en dus software, is in latere evolutie de data tot een eigen aandachtsgebied geworden, naast de software. Daardoor is er meer aandacht en nadruk gekomen voor semantiek en betekenis van de data. Al vanaf het eerste ontwerp van het web bestaat het besef van resources met een uniek adres, een URI (Uniform Resource Identifier), de meest herkenbare vorm hiervan is een URL. </p> <p>Het Semantisch Web is een visie over een uitbreiding van het bestaande World Wide Web, dat softwareprogramma's voorziet van machine leesbare metadata van de gepubliceerde informatie en gegevens. Met andere woorden: we voegen verdere gegevensbeschrijvingen toe aan anderszins bestaande inhoud en gegevens op internet. Binnen de context van het Semantische Web zijn er twee belangrijke soorten data: Linked Open Data (LOD) en Semantische Metadata.</p> <p>Linked (Open) Data zijn gestructureerde gegevens, gemodelleerd als een graph en gepubliceerd op een manier die het koppelen van gegevens tussen gedistribueerde bronnen ondersteunt. Tim Berners-Lee, de grondlegger van het Semantic Web, definieert basisprincipes voor linked data:</p> <ul> <li>Gebruik URI's als namen voor dingen. 'Things instead of strings'.</li> <li>Gebruik HTTP-URI's zodat mensen die namen kunnen opzoeken.</li> <li>Wanneer iemand een URI opzoekt, geef dan nuttige informatie, gebruikmakend van de standaarden   (RDF*, SPARQL).</li> <li>Voeg links naar andere URI's toe, zodat gebruikers meer dingen kunnen ontdekken.</li> </ul> <p>Deze ontdekking van nieuwe dingen wordt ondersteund door de publicatie van informatie in triple formaat. Triples bestaan uit een subject, predicate en een object. Bijvoorbeeld: </p> Triplestructuur <p>Tevens zijn objecten in Linked Data uniek identificeerbaar op het web middels URIs. Een voorbeeld van zo een soort URI in de Kadaster context is: </p> <p>http://bag.basisregistraties.overheid.nl/bag/id/pand/0003100000117485 </p> <p>Elke triple wordt gedefinieerd als een RDF-statement. Dit framework biedt een algemene methode voor het beschrijven en uitwisselen van graph data en maakt daarmee een gestandaardiseerde uitwisseling van gegevens mogelijk op basis van relaties tussen objecten op het web. </p>"},{"location":"federatieve-bevraging/linkeddata/#linked-data-building-blocks","title":"Linked Data Building Blocks","text":"<p>Er zijn dus een aantal building blocks voor het publiceren van gegevens als Linked Data:</p> <ol> <li>Defineer data objects (resources) als HTTP-URIs</li> <li>Gebruik de RDF framework om URIs te beschrijven en meer informatie vast te leggen</li> <li>Definieer metadata (e.g. ontologien met formele logica) om de verbindingen tussen relaties vast    te leggen</li> <li>SPARQL beschikbaar maken en gebruiken voor bevragingen</li> </ol> <p>De volgende figuren geven een concrete weergave van deze bouwstenen, de standaarden die de creatie en publicatie van linked data ondersteunen en de manier waarop deze de gebruikersinteractie met de resulterende data ondersteunen.</p> Standaarden Utiliteit <p>Source: Ongepubliceerde Lezing Linked data en Semantisch Web, University of Twente, Dr Luiz Bonino</p> <p>Voor het publiceren van volledig Linked Data (LOD) moet het 5-star model van W3C gevolgd worden. De publicatie van 5 star linked data vormt een basis voor data-gedreven applicaties. Onze toepassingen hierop worden in de volgende sectie uitgelegd. </p>"},{"location":"federatieve-bevraging/linkeddata/#gerelateerde-informatie","title":"Gerelateerde Informatie","text":"<ul> <li>Een internationale set van Linked Data\u00a0standaarden\u00a0is beschikbaar bij het W3C<ul> <li>W3C Linked Data</li> <li>W3C RDF 1.1 Concepts</li> <li>W3C SPARQL</li> </ul> </li> </ul>"},{"location":"federatieve-bevraging/linkeddata/#linked-data-en-federatief-datastelsel","title":"Linked Data en Federatief Datastelsel","text":"<p>In een federatief datastelsel is semantiek en betekenis zeer van belang. Daarom is de toepassing van Linked Data en het onderzoeken van de mogelijkheden daarvan voor de hand liggend. Het Kadaster heeft daarvoor in het verleden al de Integrale Gebruiksoplossing (IGO) en de Kadaster Knowledge Graph (KKG) ontwikkeld.</p> <p>Het Lock-Unlock project bouwt voort op de IGO en Linked Data en onderzoekt hoe 'gesloten data' of 'niet-open data' toch ontsloten kan worden. Dat betekent het stellen van voorwaarden aan de bevraging en het expliciet afdwingen en controleren van de toegang. </p> <p>Dit is precies de kern van het Lock-Unlock onderzoeksproject: </p> <p>Lock de data, unlock het potentieel!</p> <p>In de volgende secties wordt beschrijven hoe Linked Data in dit project werd toegepast en toegepast.</p>"},{"location":"federatieve-bevraging/testopstelling/","title":"Testopstelling","text":"<p>Om een federatieve bevraging te kunnen laten zien en om daarmee te kunnen onderzoeken, is een testopstelling nodig. De eerste stap in deze testopstelling was het cre\u00ebren van het informatiemodel (zie vorige sectie) en de tweede stap is het cre\u00ebren van testgegevens die aansluiten bij dit model. Deze datasets zijn gebruikt binnen dit project voor R&amp;D en voor demonstratie doeleinden. </p> <p>Het gedefinieerde informatiemodel is een losjes uitgelijnde reeks schema's, aan elkaar gerelateerd door een upperontologie en gematerialiseerde relaties (zie informatiekundige kern en informatiemodel). Voor elk van deze schema's worden testgegevens gemaakt die als een silo zijn gepubliceerd.</p>"},{"location":"federatieve-bevraging/testopstelling/#testdata-genereren-in-silos","title":"Testdata genereren in silo's","text":"<p>Testdata voor alle registraties bestaan in eigen silo's. Dit is geheel naar werkelijkheid en zo hebben we ook onze testgegevens ontworpen. </p> <p>Voor de verschillende silo's is synthetische testdata gegenereerd. Hoewel de testgegevens zo worden gegenereerd dat deze in individuele silo's worden gepubliceerd, zijn relevante koppelsleutels al in de silo's opgenomen om ervoor te zorgen dat deze silo's op een federatieve manier kunnen worden bevraagd. Met deze opname hebben we ook het eerste doel van ons project bereikt (zie ook Demonstrator).</p> <p>// TODO testdata generator code in testdata repo zetten? </p> Federatieve bevraging over silo's heen <p>De gegenereerde testgegevens worden in de testdata repo beschikbaar gesteld. Deze wordt automatisch geladen bij het opstarten van de containers van de demonstrator (zie ook testopstelling#deployment).</p>"},{"location":"federatieve-bevraging/testopstelling/#deployment","title":"Deployment","text":"<p>Als Kadaster hebben wij de BRK data zelf (uiteraard) en IMXGeo in huis. Ook de synthetische testdata van de BRK hosten we op onze infrastructuur. Hiervoor maken we gebruik van ons interne Managed Application Platform, een Kubernetes / Open Shift en GitOps gebaseerd platform.</p> <p>Voor de silo's die niet in het beheer van Kadaster zijn, te weten BRP, NHR en ANBI, zouden we die liever willen hosten op een andere cloud omgeving. Hiervoor maken we dankbaar gebruik van de mogelijkheden van de innovatiewerkplaats van de overheid, Digilab.</p> <p>Uiteindelijk ziet de deployment op basis van containers en GitOps er dan als volgt uit:</p> <p></p> <p>Links naar deployments:</p> <ul> <li>BRK -&gt; https://brk.dst.test.cloud.kadaster.nl/</li> <li>ANBI -&gt; https://anbi-lock-unlock.apps.digilab.network/</li> <li>BRP -&gt; https://brp-lock-unlock.apps.digilab.network/</li> <li>NHR -&gt; https://nhr-lock-unlock.apps.digilab.network/</li> </ul>"}]}